[project]
name = "erc7730"
description = "ERC-7730 descriptors validation and utilities."
authors = [{ name = "Ledger" }]
maintainers = [{ name = "Ledger" }]
license = { text = "Apache-2.0" }
readme = "README.md"
dynamic = ["version"]
requires-python = ">= 3.12, <3.13"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.12",
    "Typing :: Typed",
]

dependencies = [
    "pydantic>=2.8.2",
    "eip712-clearsign>=2.1.0",
    "requests>=2.32.3",
    "typer>=0.12.5",
    "eth-utils>=5.0.0",
    "jsonschema",
    "eth_hash[pycryptodome]",
    "rich",
    "typer",
    "lark>=1.2.2",
]

[project.urls]
Homepage = "https://ledgerhq.github.io/python-erc7730"
Documentation = "https://ledgerhq.github.io/python-erc7730"
Repository = "https://github.com/LedgerHQ/python-erc7730"

[project.scripts]
erc7730 = "erc7730.main:app"

[tool.pdm.scripts]
lint.help = "Run all linters/formatters (automatically run by pre-commit)"
lint.shell = "pre-commit run --all-files"
test.help = "Run unit/integration tests suite"
test.shell = "pytest tests"
docs.help = "Build documentation (output is at docs/build/index.html)"
docs.shell = "sphinx-build docs docs/build"
all.help = "Run lint+test"
all.shell = { composite = ["lint", "test"] }
exe.help = "Package the application into a standalone executable"
exe.shell = "pdm pack --compress --exe --interpreter '/usr/bin/env python3' --output erc7730"

[tool.pdm]
plugins = ["sync-pre-commit-lock", "pdm-packer"]

[tool.pdm.dev-dependencies]
dev = [
    "setuptools>=73.0.1",
    "pre-commit>=3.8.0",
    "pytest>=8.3.2",
    "pytest-cov>=5.0.0",
    "pytest-xdist[psutil]>=3.6.1",
    "pytest-timeout>=2.3.1",
    "pytest-sugar>=1.0.0",
    "pytest-benchmark>=4.0.0",
    "pytest-depends>=1.0.1",
    "pytest-unordered>=0.6.1",
    "pytest-raises>=0.11",
    "pytest-datadir-ng>=1.1.1",
    "sphinx>=7.3.7,<8.1.0",
    "sphinxcontrib-apidoc>=0.5.0",
    "sphinxcontrib-typer>=0.5.0",
    "sphinxcontrib-mermaid>=0.9.2",
    "sphinxawesome-theme>=5.2.0",
    "sphinx-github-style>=1.2.2",
    "sphinx-design>=0.6.1",
    "sphinx-issues>=4.1.0",
    "autodoc-pydantic>=2.2.0",
    "myst-parser[linkify]>=4.0.0",
    "ruff>=0.6.3",
    "ruff-lsp>=0.0.55",
    "prettydiff[terminal]>=0.1.0",
    "prettydiff",
]

[tool.pdm.version]
source = "scm"
write_to = "erc7730/VERSION"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = [
    "--import-mode=importlib",
    "-p",
    "no:web3",
    "-Werror",
    "-n=0",
    "--dist=loadscope",
    "--basetemp=tmp",
    "--junitxml=tests/.tests.xml",
    "--cov=src",
    "--cov-report=xml:tests/.coverage.xml",
    "--cov-report=term",
    "--cov-branch",
    "--benchmark-disable",
]

[tool.coverage.paths]
source = ["src"]

[tool.coverage.run]
omit = ["tests/*"]

[tool.ruff]
line-length = 120

[tool.ruff.lint]
select = [
    "E",
    "F",
    "N",
    "UP",
    "B",
    "SIM",
    "I",
    "TID",
    "RUF",
] # see https://docs.astral.sh/ruff/rules

[tool.mypy]
plugins = ["pydantic.mypy"]
follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
disallow_untyped_defs = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true

[tool.bandit]
exclude_dirs = ["tests"]

[tool.codespell]
ignore-words = ".codespellignore"
skip = "pdm.lock"
