<vars name="vars">
filename ="getfilename"
</vars>

<vars name="aaa.server-groups*">
name = "default_server_group"
</vars>

<group name='snmp' expand="">
snmpv3 enable{{ config.version | set("v3")}}
snmpv3 only{{ config.version | set("v3")}}
snmpv3 user {{ config.user | resuball('','"')}}
</group>

<group name='system'>

   <group name='config' expand="">
hostname {{ hostname | resuball('','"') | record("host")}}
ip dns domain-name {{domain-name| resuball('','"')}}
   </group>

   <group name='dns'>
      <group name='servers'>
         <group name='config'>
ip dns server-address priority {{priority}} {{address}}
         </group>
      </group>
   </group>

   <group name='ntp'>
      <group name='config'>
timesync {{enabled | re('ntp') | let(True) | default(False)}}
      </group>
      <group name='servers'>
sntp server priority {{priority}} {{address | _start_}}
ntp server {{address| _start_}} iburst
      </group>
   </group>

   <group name='telnet-server'>
      <group name='config'>
{{enable | let(enable, False) | default(True)}} telnet-server
      </group>
   </group>

   <group name='web-server'>
      <group name='config'>
{{enable | let(enable, False) | default(True)}} web-management
      </group>
   </group>

   <group name='logging.remote-servers*' expand="">
logging {{host}}
   </group>


   <group name='aaa'>
      <group name='authentication'>
      </group>
      <group name='server-groups*'>
         <group name='servers*' expand="">
radius-server host {{ address | _start_}} key {{ radius.config.secret-key | resuball('','"') }}
radius-server host {{ address | _start_}} encrypted-key {{ radius.config.secret-key | resuball('','"') }}
radius-server host {{ address | _start_}}
         </group>
      </group>
   </group>

</group>

<vars name="acl.acl-sets*">
name = "authorized-managers"
</vars>

<group name='acl.acl-sets*' expand="">
   <group name='acl-entries*' expand="">
## No subnetmask and/or protocol defined
ip authorized-managers {{ ipv4.config.source-address | re("\S+") | append("/32") | _start_ | let("ipv4.config.protocol", "any")}} 

## with subnetmask but without access manager
ip authorized-managers {{ ipv4.config.source-address | re("\S+ \S+") | to_ip | with_prefixlen | _start_ | let("ipv4.config.protocol", "any")}}

## with subnetmask with access manager, but without specific protocols defined
ip authorized-managers {{ ipv4.config.source-address | re("\S+ \S+") | to_ip | with_prefixlen | _start_ | let("ipv4.config.protocol", "any")}} access manager

## standard definition with access manager limited to a single protocol
ip authorized-managers {{ ipv4.config.source-address | re("\S+ \S+") | to_ip | with_prefixlen | _start_}} access manager access-method {{ ipv4.config.protocol }}
   </group>
</group>

<vars>
# template variable with custom regular expression:
OP_OR_MAN = "operator|manager|Operator|Manager"
RES_OR_UNRES = "restricted|unrestricted"
</vars>

<group name='snmp.communities.{{name}}*' expand="">
snmp-server community {{name | resuball('','"') | let('config.view', 'default') | let('config.access', 'default') | _start_}}
snmp-server community {{name | resuball('','"') | _start_}} {{config.view | re("OP_OR_MAN") | resub(new = 'state',old = 'operator') | resub(new = 'all',old = 'manager') | resub(new = 'state',old =  'Operator') | resub(new = 'all',old = 'Manager') | let('config.access', 'default')}}
snmp-server community {{name | resuball('','"') | _start_}} {{config.access | re("RES_OR_UNRES") | resub(new = 'rw',old = 'unrestricted') | resub(new = 'ro',old = 'restricted') | let('config.view', 'default')}}
snmp-server community {{name | resuball('','"') | _start_}} {{config.view | resub(new = 'state',old = 'operator') | resub(new = 'all',old = 'manager')| resub(new = 'state',old = 'Operator') | resub(new = 'all',old = 'Manager') }} {{config.access | re("RES_OR_UNRES") | resub(new = 'rw',old =  'unrestricted') | resub(new = 'ro',old =  'restricted')}}
</group>

<group name='snmp.traps*' expand="">
snmp-server host {{host | _start_ }} community {{community | resuball('','"')}}
snmp-server host {{host | _start_ }} community {{community | resuball('','"')}} trap-level {{trap-level}}
</group>

<group name='snmp.contact' expand="">
snmp-server contact "{{name | ORPHRASE | _start_}}" location "{{location | ORPHRASE}}"
snmp-server location "{{location | ORPHRASE | _start_}}"
snmp-server contact "{{name | ORPHRASE | _start_}}"
</group>



<group name='qos' expand="" default='N/A'>
qos dscp-map {{classifiers.terms.conditions.ipv4.config.dscp}} priority {{forwarding-groups.config.output-queue}} name {{forwarding-groups.config.name | ORPHRASE | resuball('','"')}}
</group>

<group name='vlans*' expand="">
vlan {{ vlan-id }}
   name {{config.name | ORPHRASE | resuball('','"')}}
   untagged {{members.untagged | stacked_unrange(rangechar='-', joinchar=',', stackchar='/') | split(',')}}
   tagged {{members.tagged | stacked_unrange(rangechar='-', joinchar=',', stackchar='/') | split(',')}}
   forbidden {{members.forbidden | stacked_unrange(rangechar='-', joinchar=',', stackchar='/') | split(',')}}
   ip address {{ip| re("\S+ \S+") | to_ip | with_prefixlen}}
   exit {{_end_}}
</group>

<group name='interfaces*' expand="" >
interface {{ name | let('config.type', 'IF_ETHERNET')}}
   disable {{let('config.enabled', False)}}
   broadcast-limit {{broadcast-limit}}
   name {{config.description | ORPHRASE | resuball('','"')}}
   speed-duplex {{ethernet.config.port-speed}}-{{ethernet.config.duplex-mode}}
   exit {{_end_}}
</group>

<group name='_aggregation*' expand="" >
trunk {{child_interfaces* | split(',')}} {{parent_interface}} {{type}}
</group>



<group name='local-routing.static-routes*' expand="" >
ip route {{prefix| re("\S+ \S+") | to_ip | with_prefixlen}} {{next-hops.config.next-hop}}
</group>

<group name='dhcp.pools' expand=''>
dhcp-server pool {{name | resuball('','"') }}
   default-router {{gateway | resuball('','"')}}
   domain-name {{ domain-name | resuball('','"')}}
   network {{network | re("\S+ \S+") | to_ip | with_prefixlen}}
   range {{pool-start}} {{pool-end}}
</group>

<group name='stp' expand=''>
spanning-tree {{global.config.enabled-protocol | set("mstp")}}
spanning-tree config-name {{mstp.config.name | resuball('','"')}}
spanning-tree instance {{mstp.mst-instances.config.mst-id}} priority {{mstp.mst-instances.config.bridge-priority}}
</group>