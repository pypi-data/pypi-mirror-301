[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"


[project]
name = "pystocktopus"
version = "0.1.5"
authors = [
  { name = "Akhil Sharma", email = "akhilsharma.off@gmail.com" },
]
description = "help you maintain your stock dashboard also predict future for a stock based upon past data and also use the news sentiments of stocks volatality"
readme = "README.md"
requires-python = ">=3.8"
classifiers = [
  "Development Status :: 1 - Planning",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Topic :: Scientific/Engineering",
  "Typing :: Typed",
]

dependencies = [
  "polygon-api-client",
  "scikit-learn",
  "pmdarima",
  "urllib3",
  "typing",
  "matplotlib",
  "tensorflow",
  "transformers",
  "pandas",
  "plotly",
  "mplfinance",
  "newsapi-python",
]

[project.optional-dependencies]
test = [
  "pytest",
  "pytest-cov",
]
dev = [
  "pytest",
  "pytest-cov",
]
docs = [
  "myst_parser",
  "sphinx_copybutton",
  "sphinx_autodoc_typehints",
  "furo",
  "mkdocs-material",
]

[project.urls]
Homepage = "https://github.com/Akhil-Sharma30/pystocktopus"
Documentation = "https://pystocktopus.readthedocs.io/en/latest/"
"Bug Tracker" = "https://github.com/Akhil-Sharma30/pystocktopus/issues"
Discussions = "https://github.com/Akhil-Sharma30/pystocktopus/discussions"
Changelog = "https://github.com/Akhil-Sharma30/pystocktopus/releases"


[tool.hatch]
envs.default.dependencies = [
  "pytest",
  "pytest-cov",
]


[tool.pytest.ini_options]
minversion = "6.0"
addopts = ["-ra", "--showlocals", "--strict-markers", "--strict-config"]
xfail_strict = true
filterwarnings = [
  "error",
]
log_cli_level = "INFO"
testpaths = [
  "tests",
]


[tool.coverage]
run.source = ["pystocktopus"]
port.exclude_lines = [
  'pragma: no cover',
  '\.\.\.',
  'if typing.TYPE_CHECKING:',
]

[tool.mypy]
files = ["src", "tests"]
python_version = "3.8"
warn_unused_configs = true
strict = true
show_error_codes = true
enable_error_code = ["ignore-without-code", "redundant-expr", "truthy-bool"]
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false

[[tool.mypy.overrides]]
module = "pystocktopus.*"
disallow_untyped_defs = true
disallow_incomplete_defs = true


[tool.ruff]
select = [
  "E", "F", "W", # flake8
  "B",           # flake8-bugbear
  "I",           # isort
  "ARG",         # flake8-unused-arguments
  "C4",          # flake8-comprehensions
  "EM",          # flake8-errmsg
  "ICN",         # flake8-import-conventions
  "ISC",         # flake8-implicit-str-concat
  "G",           # flake8-logging-format
  "PGH",         # pygrep-hooks
  "PIE",         # flake8-pie
  "PL",          # pylint
  "PT",          # flake8-pytest-style
  "PTH",         # flake8-use-pathlib
  "RET",         # flake8-return
  "RUF",         # Ruff-specific
  "SIM",         # flake8-simplify
  "T20",         # flake8-print
  "UP",          # pyupgrade
  "YTT",         # flake8-2020
  "EXE",         # flake8-executable
  "NPY",         # NumPy specific rules
  "PD",          # pandas-vet
]
extend-ignore = [
  "PLR",    # Design related pylint codes
  "E501",   # Line too long
]
src = ["src"]
unfixable = [
  "T20",  # Removes print statements
  "F841", # Removes unused variables
]
exclude = []
flake8-unused-arguments.ignore-variadic-names = true
isort.required-imports = ["from __future__ import annotations"]
# Uncomment if using a _compat.typing backport
# typing-modules = ["pystocktopus._compat.typing"]

[tool.ruff.per-file-ignores]
"tests/**" = ["T20"]
"noxfile.py" = ["T20"]


[tool.pylint]
py-version = "3.8"
ignore-paths = ["./_version.py"]
reports.output-format = "colorized"
similarities.ignore-imports = "yes"
messages_control.disable = [
  "design",
  "fixme",
  "line-too-long",
  "missing-module-docstring",
  "wrong-import-position",
]
