# This file was generated by liblab | https://liblab.com/

from enum import Enum
from typing import List

from .utils.base_model import BaseModel
from .utils.json_map import JsonMap


class ProjectAutoTt(Enum):
    """An enumeration representing different categories.

    :cvar EN: "en"
    :vartype EN: str
    :cvar ES: "es"
    :vartype ES: str
    :cvar IT: "it"
    :vartype IT: str
    :cvar PT: "pt"
    :vartype PT: str
    :cvar DE: "de"
    :vartype DE: str
    :cvar FR: "fr"
    :vartype FR: str
    :cvar KO: "ko"
    :vartype KO: str
    :cvar NL: "nl"
    :vartype NL: str
    :cvar TH: "th"
    :vartype TH: str
    :cvar RU: "ru"
    :vartype RU: str
    :cvar PL: "pl"
    :vartype PL: str
    :cvar JA: "ja"
    :vartype JA: str
    :cvar SV: "sv"
    :vartype SV: str
    :cvar TR: "tr"
    :vartype TR: str
    :cvar CA: "ca"
    :vartype CA: str
    :cvar ID: "id"
    :vartype ID: str
    :cvar UK: "uk"
    :vartype UK: str
    :cvar MS: "ms"
    :vartype MS: str
    :cvar ZH: "zh"
    :vartype ZH: str
    :cvar FI: "fi"
    :vartype FI: str
    :cvar NO: "no"
    :vartype NO: str
    :cvar RO: "ro"
    :vartype RO: str
    """

    EN = "en"
    ES = "es"
    IT = "it"
    PT = "pt"
    DE = "de"
    FR = "fr"
    KO = "ko"
    NL = "nl"
    TH = "th"
    RU = "ru"
    PL = "pl"
    JA = "ja"
    SV = "sv"
    TR = "tr"
    CA = "ca"
    ID = "id"
    UK = "uk"
    MS = "ms"
    ZH = "zh"
    FI = "fi"
    NO = "no"
    RO = "ro"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, ProjectAutoTt._member_map_.values()))


@JsonMap({"id_": "id"})
class Project(BaseModel):
    """Project

    :param auto_tt: List of language codes to automatically transcribe the audio of all uploaded videos.
    :type auto_tt: List[ProjectAutoTt]
    :param created_on: Timestamp when the object was created.
    :type created_on: str
    :param description: Description of the project.
    :type description: str
    :param id_: The ID of the project.
    :type id_: int
    :param published: Public videos can only be viewed when the project is published. Otherwise you'll need a private link or a password.
    :type published: bool
    :param timezone: Timezone of the project.
    :type timezone: str
    :param title: Title of the project.
    :type title: str
    """

    def __init__(
        self,
        auto_tt: List[ProjectAutoTt],
        created_on: str,
        description: str,
        id_: int,
        published: bool,
        timezone: str,
        title: str,
    ):
        """Project

        :param auto_tt: List of language codes to automatically transcribe the audio of all uploaded videos.
        :type auto_tt: List[ProjectAutoTt]
        :param created_on: Timestamp when the object was created.
        :type created_on: str
        :param description: Description of the project.
        :type description: str
        :param id_: The ID of the project.
        :type id_: int
        :param published: Public videos can only be viewed when the project is published. Otherwise you'll need a private link or a password.
        :type published: bool
        :param timezone: Timezone of the project.
        :type timezone: str
        :param title: Title of the project.
        :type title: str
        """
        self.auto_tt = self._define_list(auto_tt, ProjectAutoTt)
        self.created_on = created_on
        self.description = description
        self.id_ = id_
        self.published = published
        self.timezone = timezone
        self.title = title
