# This file was generated by liblab | https://liblab.com/

from .utils.base_model import BaseModel
from .utils.json_map import JsonMap


@JsonMap({})
class Pagination(BaseModel):
    """Pagination

    :param limit: How many rows to return in each page.
    :type limit: int
    :param next_page: Token for the next page., defaults to None
    :type next_page: str, optional
    :param page: The current page.
    :type page: str
    :param prev_page: Token for the previous page., defaults to None
    :type prev_page: str, optional
    """

    def __init__(
        self, limit: int, page: str, next_page: str = None, prev_page: str = None
    ):
        """Pagination

        :param limit: How many rows to return in each page.
        :type limit: int
        :param next_page: Token for the next page., defaults to None
        :type next_page: str, optional
        :param page: The current page.
        :type page: str
        :param prev_page: Token for the previous page., defaults to None
        :type prev_page: str, optional
        """
        self.limit = self._define_number("limit", limit, ge=20, le=1000)
        if next_page is not None:
            self.next_page = next_page
        self.page = page
        if prev_page is not None:
            self.prev_page = prev_page
