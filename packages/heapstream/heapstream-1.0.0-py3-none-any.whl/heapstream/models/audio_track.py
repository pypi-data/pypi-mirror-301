# This file was generated by liblab | https://liblab.com/

from enum import Enum

from .utils.base_model import BaseModel
from .utils.json_map import JsonMap


class AudioTrackStatus(Enum):
    """An enumeration representing different categories.

    :cvar QUEUED: "queued"
    :vartype QUEUED: str
    :cvar READY: "ready"
    :vartype READY: str
    :cvar ERRORED: "errored"
    :vartype ERRORED: str
    """

    QUEUED = "queued"
    READY = "ready"
    ERRORED = "errored"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, AudioTrackStatus._member_map_.values()))


class AudioTrackType(Enum):
    """An enumeration representing different categories.

    :cvar EMBEDDED: "embedded"
    :vartype EMBEDDED: str
    :cvar ALTERNATE: "alternate"
    :vartype ALTERNATE: str
    """

    EMBEDDED = "embedded"
    ALTERNATE = "alternate"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, AudioTrackType._member_map_.values()))


@JsonMap({"id_": "id", "type_": "type"})
class AudioTrack(BaseModel):
    """AudioTrack

    :param id_: Id of the audio track.
    :type id_: int
    :param lang_code: Language of the audio track.
    :type lang_code: str
    :param original_link: Link to the original file. Only available for additional audio tracks. URL expires after 24 hours by default.
    :type original_link: str
    :param status: Status of the audio track.
    :type status: AudioTrackStatus
    :param title: Title of the audio track.
    :type title: str
    :param type_: Type of the audio track.
    :type type_: AudioTrackType
    """

    def __init__(
        self,
        id_: int,
        lang_code: str,
        original_link: str,
        status: AudioTrackStatus,
        title: str,
        type_: AudioTrackType,
    ):
        """AudioTrack

        :param id_: Id of the audio track.
        :type id_: int
        :param lang_code: Language of the audio track.
        :type lang_code: str
        :param original_link: Link to the original file. Only available for additional audio tracks. URL expires after 24 hours by default.
        :type original_link: str
        :param status: Status of the audio track.
        :type status: AudioTrackStatus
        :param title: Title of the audio track.
        :type title: str
        :param type_: Type of the audio track.
        :type type_: AudioTrackType
        """
        self.id_ = id_
        self.lang_code = lang_code
        self.original_link = original_link
        self.status = self._enum_matching(status, AudioTrackStatus.list(), "status")
        self.title = title
        self.type_ = self._enum_matching(type_, AudioTrackType.list(), "type_")
