# This file was generated by liblab | https://liblab.com/

from enum import Enum

from .utils.base_model import BaseModel
from .utils.json_map import JsonMap


class TextTrackEditDefault(Enum):
    """An enumeration representing different categories.

    :cvar TRUE: "true"
    :vartype TRUE: str
    """

    TRUE = "true"

    def list():
        """Lists all category values.

        :return: A list of all category values.
        :rtype: list
        """
        return list(map(lambda x: x.value, TextTrackEditDefault._member_map_.values()))


@JsonMap({})
class TextTrackEdit(BaseModel):
    """TextTrackEdit

    :param default: If the text track is the default one pre-selected., defaults to None
    :type default: TextTrackEditDefault, optional
    :param title: Title of the text track., defaults to None
    :type title: str, optional
    """

    def __init__(self, default: TextTrackEditDefault = None, title: str = None):
        """TextTrackEdit

        :param default: If the text track is the default one pre-selected., defaults to None
        :type default: TextTrackEditDefault, optional
        :param title: Title of the text track., defaults to None
        :type title: str, optional
        """
        if default is not None:
            self.default = self._enum_matching(
                default, TextTrackEditDefault.list(), "default"
            )
        if title is not None:
            self.title = self._define_str("title", title, min_length=1, max_length=20)
