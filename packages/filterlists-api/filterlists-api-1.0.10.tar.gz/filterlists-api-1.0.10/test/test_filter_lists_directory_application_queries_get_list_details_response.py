# coding: utf-8

"""
    FilterLists Directory API

    An ASP.NET Core API serving the core FilterList information.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from filterlists_api.models.filter_lists_directory_application_queries_get_list_details_response import FilterListsDirectoryApplicationQueriesGetListDetailsResponse

class TestFilterListsDirectoryApplicationQueriesGetListDetailsResponse(unittest.TestCase):
    """FilterListsDirectoryApplicationQueriesGetListDetailsResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilterListsDirectoryApplicationQueriesGetListDetailsResponse:
        """Test FilterListsDirectoryApplicationQueriesGetListDetailsResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilterListsDirectoryApplicationQueriesGetListDetailsResponse`
        """
        model = FilterListsDirectoryApplicationQueriesGetListDetailsResponse()
        if include_optional:
            return FilterListsDirectoryApplicationQueriesGetListDetailsResponse(
                id = 301,
                name = 'EasyList',
                description = '
                EasyList is the primary filter list that removes most adverts from international web pages, including unwanted
                frames, images, and objects. It is the most popular list used by many ad blockers and forms the basis of over a
                dozen combination and supplementary filter lists.
            ',
                license_id = 4,
                syntax_ids = [3],
                language_ids = [37],
                tag_ids = [2],
                view_urls = [
                    filterlists_api.models.filter_lists/directory/application/queries/get_list_details/view_url_response.FilterLists.Directory.Application.Queries.GetListDetails.ViewUrlResponse(
                        segment_number = 1, 
                        primariness = 1, 
                        url = 'https://easylist.to/easylist/easylist.txt', )
                    ],
                home_url = 'https://easylist.to/',
                onion_url = '',
                policy_url = '',
                submission_url = '',
                issues_url = 'https://github.com/easylist/easylist/issues',
                forum_url = 'https://forums.lanik.us/viewforum.php?f=23',
                chat_url = '',
                email_address = 'easylist@protonmail.com',
                donate_url = '',
                maintainer_ids = [7],
                upstream_filter_list_ids = [
                    56
                    ],
                fork_filter_list_ids = [166,565],
                included_in_filter_list_ids = [
                    56
                    ],
                includes_filter_list_ids = [11,13,168],
                dependency_filter_list_ids = [
                    56
                    ],
                dependent_filter_list_ids = [
                    56
                    ]
            )
        else:
            return FilterListsDirectoryApplicationQueriesGetListDetailsResponse(
                name = 'EasyList',
        )
        """

    def testFilterListsDirectoryApplicationQueriesGetListDetailsResponse(self):
        """Test FilterListsDirectoryApplicationQueriesGetListDetailsResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
