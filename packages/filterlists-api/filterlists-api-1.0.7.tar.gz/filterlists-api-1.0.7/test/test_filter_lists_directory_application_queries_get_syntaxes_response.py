# coding: utf-8

"""
    FilterLists Directory API

    An ASP.NET Core API serving the core FilterList information.

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from filterlists_api.models.filter_lists_directory_application_queries_get_syntaxes_response import FilterListsDirectoryApplicationQueriesGetSyntaxesResponse

class TestFilterListsDirectoryApplicationQueriesGetSyntaxesResponse(unittest.TestCase):
    """FilterListsDirectoryApplicationQueriesGetSyntaxesResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> FilterListsDirectoryApplicationQueriesGetSyntaxesResponse:
        """Test FilterListsDirectoryApplicationQueriesGetSyntaxesResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `FilterListsDirectoryApplicationQueriesGetSyntaxesResponse`
        """
        model = FilterListsDirectoryApplicationQueriesGetSyntaxesResponse()
        if include_optional:
            return FilterListsDirectoryApplicationQueriesGetSyntaxesResponse(
                id = 3,
                name = 'Adblock Plus',
                description = '',
                url = 'https://adblockplus.org/filters',
                filter_list_ids = [2,6,11],
                software_ids = [1,2,3]
            )
        else:
            return FilterListsDirectoryApplicationQueriesGetSyntaxesResponse(
        )
        """

    def testFilterListsDirectoryApplicationQueriesGetSyntaxesResponse(self):
        """Test FilterListsDirectoryApplicationQueriesGetSyntaxesResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
