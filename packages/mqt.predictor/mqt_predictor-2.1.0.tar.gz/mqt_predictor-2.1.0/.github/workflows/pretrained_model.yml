name: Pre-Trained Models

on:
  workflow_dispatch:

env:
  RUN_PREGENERATED_TESTS: true

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  dist:
    name: üì¶ Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: hynek/build-and-inspect-python-package@v2
        id: baipp
      - name: üêç Determine maximum supported Python version
        run: echo "max-python-version=$(echo '${{ steps.baipp.outputs.supported_python_classifiers_json_array }}' | jq --raw-output '.[-1]')" >> $GITHUB_OUTPUT
        id: max-python-version
    outputs:
      python-versions: ${{ steps.baipp.outputs.supported_python_classifiers_json_array }}
      max-python-version: ${{ steps.max-python-version.outputs.max-python-version }}

  python-tests:
    name: üêç Test on ${{ matrix.runs-on }} with Python ${{ matrix.python-version }}
    needs: dist
    strategy:
      fail-fast: false
      matrix:
        runs-on: [ubuntu-latest] # on ubuntu, all supported python versions are tested while on macos and windows only the minimum and maximum supported python versions are tested
        python-version: ${{ fromJson(needs.dist.outputs.python-versions) }}
        include:
          - runs-on: macos-13
            python-version: ${{ fromJson(needs.dist.outputs.python-versions)[0] }}
          - runs-on: macos-13
            python-version: ${{ needs.dist.outputs.max-python-version }}
          - runs-on: macos-14
            python-version: ${{ fromJson(needs.dist.outputs.python-versions)[0] }}
          - runs-on: macos-14
            python-version: ${{ needs.dist.outputs.max-python-version }}
          - runs-on: windows-latest
            python-version: ${{ fromJson(needs.dist.outputs.python-versions)[0] }}
          - runs-on: windows-latest
            python-version: ${{ needs.dist.outputs.max-python-version }}
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      - uses: yezz123/setup-uv@v4
      - uses: wntrblm/nox@2024.04.15
        with:
          python-versions: ${{ matrix.python-version }}
      - run: nox -s tests-${{ matrix.python-version }} --verbose -- tests/test_pretrained_models.py
