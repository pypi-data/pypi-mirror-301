{"version":3,"file":"static/css/main.315d2e85.css","mappings":"AAAA,6BAEE,kBAAoB,CADpB,iBAEF,CAGA,mGAGE,eAEF,CAGA,8BACE,iBAAkB,CAElB,iBACF,CAKA,+EACE,WACF,CAGA,uDACE,UAAW,CAOX,YAAc,CAJd,MAAU,CAFV,iBAAkB,CAGlB,UAAY,CAKZ,0BAA2B,CAD3B,YAEF,CAGA,qCAEE,kBAAmB,CADnB,YAAa,CAEb,0BAA2B,CAG3B,iBAAkB,CAFlB,eAAgB,CAGhB,UAAY,CAFZ,iBAGF,CAOA,iBACE,GACE,SACF,CACA,IACE,UACF,CACA,GACE,SACF,CACF,CAEA,wCAGE,2BAA4B,CAF5B,mBAAyB,CACzB,gDAEF,CAEA,qBAEE,UAAY,CADZ,mBAEF,CAEA,6BAEE,QACF,CAGA,WAEE,kBAA4B,CAC5B,aAAc,CAFd,sBAGF,CACA,iBAGE,eAAgB,CAFhB,iBAAkB,CAClB,oBAEF,CAEA,iBAGE,cAAe,CAFf,iBAAkB,CAClB,oBAEF,CAEA,kBACE,iBACF,CAGA,kBACE,iBACF,CAEA,kBACE;;aAGF,CAEA,wCACE;;aAGF,CAGA,WACE,oBACF,CAGA,OACE,QACF","sources":["css/TreeViewStyles.css"],"sourcesContent":[".tree-view .MuiTreeItem-root {\r\n  position: relative;\r\n  padding-left: 0.1rem;\r\n}\r\n\r\n/* Set the font size for span elements within the tree */\r\n.tree-view .MuiTypography-root,\r\n.tree-view .MuiFormControlLabel-label,\r\n.tree-view .MuiTreeItem-label {\r\n  font-size: 0.8rem; /* Adjust as needed */\r\n  /* font-weight: bold; */\r\n}\r\n\r\n/* Vertical line for the tree */\r\n.tree-view .MuiTreeItem-group {\r\n  padding-left: 1rem;\r\n  /* border-left: 1px solid rgba(0, 0, 0, 0.5); */\r\n  position: relative;\r\n}\r\n.MuiTreeItem-content {\r\n  height: 2rem;\r\n}\r\n\r\n.MuiTypography-root.MuiTreeItem-label.MuiTypography-body1 {\r\n  height: 2rem;\r\n}\r\n\r\n/* Horizontal line connecting to the parent */\r\n.tree-view .MuiTreeItem-content:not(.no-before):before {\r\n  content: \"\";\r\n  position: absolute;\r\n  /* top: 38%; */\r\n  left: 0rem;\r\n  top: 0.85rem;\r\n  /* border-left: 1px solid rgba(0, 0, 0, 0.5);\r\n  border-bottom: 1px solid rgba(0, 0, 0, 0.5); */\r\n  height: 0.9rem; /* Adjust as needed */\r\n  width: 1.5rem; /* Adjust to match the left margin of .MuiTreeItem-group */\r\n  transform: translateY(-50%);\r\n}\r\n\r\n/* Ensure the label spans are displayed correctly */\r\n.tree-view .MuiFormControlLabel-root {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: flex-start; /* Aligns text to the left */\r\n  text-align: left; /* Ensures text within spans is left-aligned */\r\n  width: fit-content; /* Ensures the flex container takes full width */\r\n  position: relative;\r\n  top: -0.1rem;\r\n}\r\n\r\n/* Uncomment and adjust if needed */\r\n/* .MuiTreeItem-iconContainer {\r\n  position: relative;\r\n  top: 0;\r\n} */\r\n@keyframes blink {\r\n  0% {\r\n    opacity: 1;\r\n  }\r\n  50% {\r\n    opacity: 0.5;\r\n  }\r\n  100% {\r\n    opacity: 1;\r\n  }\r\n}\r\n\r\n.MuiFormControlLabel-label.Mui-disabled {\r\n  color: #ff0000 !important; /* Bright Red */\r\n  text-shadow: 0 0 5px rgba(255, 0, 0, 0.7), 0 0 10px rgba(255, 0, 0, 0.5); /* Glowing effect */\r\n  animation: blink 1s infinite; /* Blinking animation */\r\n}\r\n\r\n#disabled_div_enable {\r\n  pointer-events: none; /* Disable all interactions */\r\n  opacity: 0.5; /* Dim the div to indicate it's disabled */\r\n}\r\n\r\nspan > div > svg.MuiSvgIcon-root {\r\n  /* background-color: black; */\r\n  scale: 0.8;\r\n}\r\n\r\n/* Example CSS for vertical scrolling */\r\n.tree-view {\r\n  scroll-behavior: smooth;\r\n  background: rgb(248 249 251);\r\n  overflow: auto;\r\n}\r\n.y_scroll_enable {\r\n  overflow-y: scroll;\r\n  scrollbar-width: auto;\r\n  max-height: 100%;\r\n}\r\n\r\n.x_scroll_enable {\r\n  overflow-x: scroll;\r\n  scrollbar-width: auto;\r\n  max-width: 100%;\r\n}\r\n\r\n.y_scroll_disable {\r\n  overflow-y: hidden;\r\n}\r\n\r\n/* Example CSS for horizontal scrolling */\r\n.x_scroll_disable {\r\n  overflow-x: hidden;\r\n}\r\n\r\n.MuiCheckbox-root {\r\n  color: var(\r\n    --checkbox-color\r\n  ) !important; /* Dynamically set the checkbox color based on the current theme */\r\n}\r\n\r\n.MuiCheckbox-colorSecondary.Mui-checked {\r\n  color: var(\r\n    --primary-color\r\n  ) !important; /* Use primary color for checked state */\r\n}\r\n\r\n/* Default (Light Theme) */\r\n.tree-view {\r\n  background: rgba(248, 249, 251, 0.1);\r\n}\r\n\r\n/* Space above the first Content*/\r\nli#\\30 {\r\n  top: 0.6em;\r\n}\r\n\r\n/* Dark Mode */\r\n\r\n/* input[type=\"checkbox\"]:checked + svg {\r\n  background-color: white;\r\n}\r\n\r\ninput[type=\"checkbox\"]:checked + span > svg {\r\n  background-color: white;\r\n}\r\n\r\ninput[type=\"checkbox\"][data-indeterminate=\"true\"] + span > svg {\r\n  background-color: lightgray;\r\n} */\r\n"],"names":[],"sourceRoot":""}