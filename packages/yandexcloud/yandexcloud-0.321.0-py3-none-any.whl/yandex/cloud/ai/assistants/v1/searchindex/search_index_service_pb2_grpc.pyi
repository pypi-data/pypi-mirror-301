"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import abc
import collections.abc
import grpc
import grpc.aio
import typing
import yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2
import yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2
import yandex.cloud.operation.operation_pb2

_T = typing.TypeVar("_T")

class _MaybeAsyncIterator(collections.abc.AsyncIterator[_T], collections.abc.Iterator[_T], metaclass=abc.ABCMeta): ...

class _ServicerContext(grpc.ServicerContext, grpc.aio.ServicerContext):  # type: ignore[misc, type-arg]
    ...

class SearchIndexServiceStub:
    def __init__(self, channel: typing.Union[grpc.Channel, grpc.aio.Channel]) -> None: ...
    Create: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.CreateSearchIndexRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Get: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.GetSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex,
    ]

    Update: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.UpdateSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex,
    ]

    Delete: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexResponse,
    ]

    List: grpc.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesResponse,
    ]

class SearchIndexServiceAsyncStub:
    Create: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.CreateSearchIndexRequest,
        yandex.cloud.operation.operation_pb2.Operation,
    ]

    Get: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.GetSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex,
    ]

    Update: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.UpdateSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex,
    ]

    Delete: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexResponse,
    ]

    List: grpc.aio.UnaryUnaryMultiCallable[
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesRequest,
        yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesResponse,
    ]

class SearchIndexServiceServicer(metaclass=abc.ABCMeta):
    @abc.abstractmethod
    def Create(
        self,
        request: yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.CreateSearchIndexRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.operation.operation_pb2.Operation, collections.abc.Awaitable[yandex.cloud.operation.operation_pb2.Operation]]: ...

    @abc.abstractmethod
    def Get(
        self,
        request: yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.GetSearchIndexRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex, collections.abc.Awaitable[yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex]]: ...

    @abc.abstractmethod
    def Update(
        self,
        request: yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.UpdateSearchIndexRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex, collections.abc.Awaitable[yandex.cloud.ai.assistants.v1.searchindex.search_index_pb2.SearchIndex]]: ...

    @abc.abstractmethod
    def Delete(
        self,
        request: yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexResponse, collections.abc.Awaitable[yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.DeleteSearchIndexResponse]]: ...

    @abc.abstractmethod
    def List(
        self,
        request: yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesRequest,
        context: _ServicerContext,
    ) -> typing.Union[yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesResponse, collections.abc.Awaitable[yandex.cloud.ai.assistants.v1.searchindex.search_index_service_pb2.ListSearchIndicesResponse]]: ...

def add_SearchIndexServiceServicer_to_server(servicer: SearchIndexServiceServicer, server: typing.Union[grpc.Server, grpc.aio.Server]) -> None: ...
