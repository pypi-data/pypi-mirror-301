Metadata-Version: 2.1
Name: autora-experimentalist-extrapolation
Version: 1.0.1
Summary: AutoRA Extrapolation Experimentalist
Author-email: Younes Strittmatter <younes_strittmatter@brown.edu>
License: Copyright (c) 2024 Younes Strittmatter
        
        Permission is hereby granted, free of charge, to any person obtaining a copy
        of this software and associated documentation files (the "Software"), to deal
        in the Software without restriction, including without limitation the rights
        to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
        copies of the Software, and to permit persons to whom the Software is
        furnished to do so, subject to the following conditions:
        
        The above copyright notice and this permission notice shall be included in all
        copies or substantial portions of the Software.
        
        THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
        IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
        FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
        AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
        LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
        OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
        SOFTWARE.
        
Project-URL: homepage, http://www.empiricalresearch.ai
Project-URL: repository, https://github.com/AutoResearch/autora-experimentalist-extrapolation
Project-URL: documentation, https://autoresearch.github.io/autora/
Requires-Python: <4,>=3.8
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: autora-core
Requires-Dist: scikit-learn
Provides-Extra: dev
Requires-Dist: autora-core[dev]; extra == "dev"

# Extrapolation Experimentalist

The extrapolation sampling method identifies novel experimental conditions where the prediction of a
model exhibits the highest slope compared to already existing data.

For each novel condition, denoted as $x_i$, with its corresponding prediction $y_{\text{pred}, i}$,
the process begins by identifying the nearest existing datapoint, $x_{\text{nearest}, i}$, which has
an associated observed value $y_{\text{existing}, i}$. The slope between these points is then
calculated as follows:

$$ m_i = \frac{y_{\text{pred}, i}-y_{\text{existing}, i}}{x_i-x_{\text{nearest}, i}} $$

The condition with the highest slope is selected first:

$$ \underset{i}{argmax}(m_i) $$

