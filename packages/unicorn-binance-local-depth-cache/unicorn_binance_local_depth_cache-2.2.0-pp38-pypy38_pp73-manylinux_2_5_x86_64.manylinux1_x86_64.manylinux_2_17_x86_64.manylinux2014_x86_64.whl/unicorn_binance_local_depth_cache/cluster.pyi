import logging
from .cluster_endpoints import ClusterEndpoints as ClusterEndpoints
from .exceptions import DepthCacheClusterNotReachableError as DepthCacheClusterNotReachableError
from _typeshed import Incomplete

__logger__: logging.getLogger
logger = __logger__

class Cluster:
    address: Incomplete
    endpoints: Incomplete
    port: Incomplete
    url: Incomplete
    def __init__(self, address: str = None, port: int = None) -> None: ...
    def create_depthcache(self, exchange: str = None, market: str = None, desired_quantity: int = None, update_interval: int = None, refresh_interval: int = None): ...
    def get_asks(self, exchange: str = None, market: str = None, limit_count: int = None, threshold_volume: int = None): ...
    def get_bids(self, exchange: str = None, market: str = None, limit_count: int = None, threshold_volume: int = None): ...
    def get_cluster_info(self): ...
    def get_depthcache_list(self): ...
    def get_depthcache_info(self, exchange: str = None, market: str = None): ...
    def get_test(self): ...
    def submit_license(self, api_secret: str = None, license_token: str = None): ...
    def stop_depthcache(self, exchange: str = None, market: str = None): ...
    def test(self): ...
