# coding: utf-8

"""
    MetaCopier API

    Explore the power of the MetaCopier API! Our RESTful API offers scalable and secure access to accounts, projects, and more. Get started quickly with authentication, explore endpoints, and access code samples in various languages.<br/><br/>All dates are in ISO 8601<br/><br/>This API is not designed for real-time communication purposes. For instance, continuously polling account information such as open positions every second is not recommended.<br/><br/>Our frontend uses this API, so you can look at the requests on our frontend for examples.

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metacopier_api.api.trading_api_api import TradingAPIApi


class TestTradingAPIApi(unittest.TestCase):
    """TradingAPIApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TradingAPIApi()

    def tearDown(self) -> None:
        pass

    def test_close_all_positions(self) -> None:
        """Test case for close_all_positions

        Close all account positions
        """
        pass

    def test_close_position(self) -> None:
        """Test case for close_position

        Close an account position
        """
        pass

    def test_get_history_positions(self) -> None:
        """Test case for get_history_positions

        Get account history positions
        """
        pass

    def test_get_information(self) -> None:
        """Test case for get_information

        Get account information
        """
        pass

    def test_get_positions(self) -> None:
        """Test case for get_positions

        Get account positions
        """
        pass

    def test_modify_position(self) -> None:
        """Test case for modify_position

        Modify an account position
        """
        pass

    def test_open_position(self) -> None:
        """Test case for open_position

        Open an account position
        """
        pass


if __name__ == '__main__':
    unittest.main()
