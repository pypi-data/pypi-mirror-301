# coding: utf-8

"""
    MetaCopier API

    Explore the power of the MetaCopier API! Our RESTful API offers scalable and secure access to accounts, projects, and more. Get started quickly with authentication, explore endpoints, and access code samples in various languages.<br/><br/>All dates are in ISO 8601<br/><br/>This API is not designed for real-time communication purposes. For instance, continuously polling account information such as open positions every second is not recommended.<br/><br/>Our frontend uses this API, so you can look at the requests on our frontend for examples.

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metacopier_api.api.type_api_api import TypeAPIApi


class TestTypeAPIApi(unittest.TestCase):
    """TypeAPIApi unit test stubs"""

    def setUp(self) -> None:
        self.api = TypeAPIApi()

    def tearDown(self) -> None:
        pass

    def test_get_account_types(self) -> None:
        """Test case for get_account_types

        Get account type enum
        """
        pass

    def test_get_currency_types(self) -> None:
        """Test case for get_currency_types

        Get currency type enum
        """
        pass

    def test_get_feature_types(self) -> None:
        """Test case for get_feature_types

        Get feature type enum
        """
        pass

    def test_get_log_types(self) -> None:
        """Test case for get_log_types

        Get log type enum
        """
        pass

    def test_get_regions(self) -> None:
        """Test case for get_regions

        Get region enum
        """
        pass

    def test_get_risk_types(self) -> None:
        """Test case for get_risk_types

        Get risk type enum
        """
        pass

    def test_get_scale_types(self) -> None:
        """Test case for get_scale_types

        Get scale type enum
        """
        pass


if __name__ == '__main__':
    unittest.main()
