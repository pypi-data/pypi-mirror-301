# coding: utf-8

"""
    MetaCopier API

    Explore the power of the MetaCopier API! Our RESTful API offers scalable and secure access to accounts, projects, and more. Get started quickly with authentication, explore endpoints, and access code samples in various languages.<br/><br/>All dates are in ISO 8601<br/><br/>This API is not designed for real-time communication purposes. For instance, continuously polling account information such as open positions every second is not recommended.<br/><br/>Our frontend uses this API, so you can look at the requests on our frontend for examples.

    The version of the OpenAPI document: 0.9.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from metacopier_api.api.project_api_api import ProjectAPIApi


class TestProjectAPIApi(unittest.TestCase):
    """ProjectAPIApi unit test stubs"""

    def setUp(self) -> None:
        self.api = ProjectAPIApi()

    def tearDown(self) -> None:
        pass

    def test_acknowledge_all_logs(self) -> None:
        """Test case for acknowledge_all_logs

        Acknowledge all logs
        """
        pass

    def test_acknowledge_log(self) -> None:
        """Test case for acknowledge_log

        Acknowledge a log
        """
        pass

    def test_create_project_feature(self) -> None:
        """Test case for create_project_feature

        Create a project feature
        """
        pass

    def test_create_project_strategy(self) -> None:
        """Test case for create_project_strategy

        Create a strategy
        """
        pass

    def test_create_project_strategy_copier(self) -> None:
        """Test case for create_project_strategy_copier

        Create a strategy copier
        """
        pass

    def test_create_project_strategy_copier_feature(self) -> None:
        """Test case for create_project_strategy_copier_feature

        Create a strategy copier feature
        """
        pass

    def test_create_project_symbol_mapping(self) -> None:
        """Test case for create_project_symbol_mapping

        Create a symbol mapping
        """
        pass

    def test_delete_project_feature(self) -> None:
        """Test case for delete_project_feature

        Delete a project feature
        """
        pass

    def test_delete_project_strategy(self) -> None:
        """Test case for delete_project_strategy

        Delete a strategy
        """
        pass

    def test_delete_project_strategy_copier(self) -> None:
        """Test case for delete_project_strategy_copier

        Delete a strategy copier
        """
        pass

    def test_delete_project_strategy_copier_feature(self) -> None:
        """Test case for delete_project_strategy_copier_feature

        Delete a strategy copier feature
        """
        pass

    def test_delete_project_symbol_mapping(self) -> None:
        """Test case for delete_project_symbol_mapping

        Delete a symbol mapping
        """
        pass

    def test_get_invoices(self) -> None:
        """Test case for get_invoices

        Get all invoices
        """
        pass

    def test_get_project(self) -> None:
        """Test case for get_project

        Get a project
        """
        pass

    def test_get_project_feature(self) -> None:
        """Test case for get_project_feature

        Get a project feature
        """
        pass

    def test_get_project_features(self) -> None:
        """Test case for get_project_features

        Get all project features
        """
        pass

    def test_get_project_logs(self) -> None:
        """Test case for get_project_logs

        Get project logs
        """
        pass

    def test_get_project_strategies(self) -> None:
        """Test case for get_project_strategies

        Get all strategies
        """
        pass

    def test_get_project_strategy(self) -> None:
        """Test case for get_project_strategy

        Get a strategy
        """
        pass

    def test_get_project_strategy_copier(self) -> None:
        """Test case for get_project_strategy_copier

        Get strategy copier
        """
        pass

    def test_get_project_strategy_copier_feature(self) -> None:
        """Test case for get_project_strategy_copier_feature

        Get a strategy copier feature
        """
        pass

    def test_get_project_strategy_copier_features(self) -> None:
        """Test case for get_project_strategy_copier_features

        Get all strategy copier features
        """
        pass

    def test_get_project_strategy_copiers(self) -> None:
        """Test case for get_project_strategy_copiers

        Get strategy copiers
        """
        pass

    def test_get_project_symbol_mapping(self) -> None:
        """Test case for get_project_symbol_mapping

        Get a symbol mapping
        """
        pass

    def test_get_project_symbol_mappings(self) -> None:
        """Test case for get_project_symbol_mappings

        Get symbol mappings
        """
        pass

    def test_update_project(self) -> None:
        """Test case for update_project

        Update a project
        """
        pass

    def test_update_project_feature(self) -> None:
        """Test case for update_project_feature

        Update a project feature
        """
        pass

    def test_update_project_strategy(self) -> None:
        """Test case for update_project_strategy

        Update a strategy
        """
        pass

    def test_update_project_strategy_copier(self) -> None:
        """Test case for update_project_strategy_copier

        Update a strategy copier
        """
        pass

    def test_update_project_strategy_copier_feature(self) -> None:
        """Test case for update_project_strategy_copier_feature

        Update a strategy copier feature
        """
        pass

    def test_update_project_symbol_mapping(self) -> None:
        """Test case for update_project_symbol_mapping

        Update a symbol mapping
        """
        pass


if __name__ == '__main__':
    unittest.main()
