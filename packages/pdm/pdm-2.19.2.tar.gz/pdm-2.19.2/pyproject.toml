[build-system]
requires = [
    "pdm-backend",
    "pdm-build-locked",
]
build-backend = "pdm.backend"

[project]
name = "pdm"
description = "A modern Python package and dependency manager supporting the latest PEP standards"
authors = [
    { name = "Frost Ming", email = "mianghong@gmail.com" },
]
dynamic = []
requires-python = ">=3.8"
dependencies = [
    "blinker",
    "packaging>=20.9,!=22.0",
    "platformdirs",
    "rich>=12.3.0",
    "virtualenv>=20",
    "pyproject-hooks",
    "unearth>=0.17.0",
    "dep-logic>=0.4.4",
    "findpython>=0.6.0,<1.0.0a0",
    "tomlkit>=0.11.1,<1",
    "shellingham>=1.3.2",
    "python-dotenv>=0.15",
    "resolvelib>=1.0.1",
    "installer<0.8,>=0.7",
    "truststore>=0.9; python_version >= \"3.10\"",
    "tomli>=1.1.0; python_version < \"3.11\"",
    "importlib-resources>=5; python_version < \"3.9\"",
    "importlib-metadata>=3.6; python_version < \"3.10\"",
    "hishel>=0.0.32,<0.1.0",
    "msgpack>=1.0",
    "pbs-installer>=2024.4.18",
    "httpx[socks]<1,>0.20",
    "filelock>=3.13",
]
readme = "README.md"
keywords = [
    "packaging",
    "dependency",
    "workflow",
]
classifiers = [
    "Topic :: Software Development :: Build Tools",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
]
version = "2.19.2"

[project.license]
text = "MIT"

[project.urls]
Homepage = "https://pdm-project.org"
Repository = "https://github.com/pdm-project/pdm"
Documentation = "https://pdm-project.org"
Changelog = "https://pdm-project.org/latest/dev/changelog/"

[project.optional-dependencies]
pytest = [
    "pytest",
    "pytest-mock",
]
copier = [
    "copier>=8.0.0",
]
cookiecutter = [
    "cookiecutter",
]
keyring = [
    "keyring",
]
template = [
    "pdm[copier,cookiecutter]",
]
all = [
    "pdm[keyring,template]",
]
locked = [
    "anyio==4.3.0",
    "blinker==1.7.0",
    "certifi==2024.2.2",
    "dep-logic==0.4.8",
    "distlib==0.3.8",
    "exceptiongroup==1.2.0 ; python_version < \"3.11\"",
    "filelock==3.13.3",
    "findpython==0.6.0",
    "h11==0.14.0",
    "hishel==0.0.32",
    "httpcore==1.0.5",
    "httpx==0.27.0",
    "httpx[socks]==0.27.0",
    "idna==3.6",
    "importlib-metadata==7.1.0 ; python_version < \"3.12\"",
    "importlib-resources==6.4.0 ; python_version < \"3.10\"",
    "installer==0.7.0",
    "markdown-it-py==3.0.0",
    "mdurl==0.1.2",
    "msgpack==1.0.8",
    "packaging==24.0",
    "pbs-installer==2024.10.10",
    "platformdirs==4.2.0",
    "pygments==2.17.2",
    "pyproject-hooks==1.0.0",
    "python-dotenv==1.0.1",
    "resolvelib==1.0.1",
    "rich==13.7.1",
    "shellingham==1.5.4",
    "sniffio==1.3.1",
    "socksio==1.0.0",
    "tomli==2.0.1 ; python_version < \"3.11\"",
    "tomlkit==0.13.2",
    "truststore==0.9.2 ; python_version >= \"3.10\"",
    "typing-extensions==4.10.0",
    "unearth==0.17.2",
    "virtualenv==20.25.1",
    "zipp==3.18.1 ; python_version < \"3.12\"",
]
all-locked = [
    "arrow==1.2.3",
    "backports-tarfile==1.2.0 ; python_version < \"3.12\"",
    "binaryornot==0.4.4",
    "certifi==2024.2.2",
    "cffi==1.15.1 ; sys_platform == \"linux\"",
    "chardet==5.2.0",
    "charset-normalizer==3.3.2",
    "click==8.1.7",
    "colorama==0.4.6",
    "cookiecutter==2.1.1",
    "copier==8.0.0",
    "cryptography==41.0.1 ; sys_platform == \"linux\"",
    "decorator==5.1.1",
    "dunamai==1.17.0",
    "funcy==2.0",
    "idna==3.6",
    "importlib-metadata==7.1.0 ; python_version < \"3.12\"",
    "importlib-resources==6.4.0 ; python_version < \"3.10\"",
    "jaraco-classes==3.2.3",
    "jaraco-context==5.3.0",
    "jaraco-functools==4.0.2",
    "jeepney==0.8.0 ; sys_platform == \"linux\"",
    "jinja2==3.1.3",
    "jinja2-ansible-filters==1.3.2",
    "jinja2-time==0.2.0",
    "keyring==25.3.0",
    "markupsafe==2.1.5",
    "more-itertools==9.1.0",
    "packaging==24.0",
    "pathspec==0.12.1",
    "plumbum==1.8.2",
    "prompt-toolkit==3.0.38",
    "pycparser==2.21 ; sys_platform == \"linux\"",
    "pydantic==1.10.9",
    "pygments==2.17.2",
    "python-dateutil==2.9.0.post0",
    "python-slugify==8.0.1",
    "pywin32==306 ; platform_system == \"Windows\" and platform_python_implementation != \"PyPy\"",
    "pywin32-ctypes==0.2.1 ; sys_platform == \"win32\"",
    "pyyaml==6.0.1",
    "pyyaml-include==1.3",
    "questionary==1.10.0",
    "requests==2.31.0",
    "secretstorage==3.3.3 ; sys_platform == \"linux\"",
    "six==1.16.0",
    "text-unidecode==1.3",
    "typing-extensions==4.10.0",
    "urllib3==2.2.1",
    "wcwidth==0.2.6",
    "zipp==3.18.1 ; python_version < \"3.12\"",
]

[project.scripts]
pdm = "pdm.core:main"

[tool.pdm.version]
source = "scm"
write_to = "pdm/VERSION"

[tool.pdm.build]
excludes = [
    "./**/.git",
]
package-dir = "src"
includes = [
    "src/pdm",
]
source-includes = [
    "tests",
    "typings",
    "CHANGELOG.md",
    "LICENSE",
    "README.md",
    "tox.ini",
]
editable-backend = "path"
locked = true
locked-groups = [
    "default",
    "all",
]

[tool.pdm.scripts]
pre_release = "python tasks/max_versions.py"
release = "python tasks/release.py"
test = "pytest"
tox = "tox"
lint = "pre-commit run --all-files"

[tool.pdm.scripts.coverage]
shell = "python -m pytest --verbosity=3 --cov=src/pdm --cov-branch --cov-report term-missing tests/\n                    "

[tool.pdm.scripts.doc]
cmd = "mkdocs serve"
help = "Start the dev server for docs preview"

[tool.pdm.scripts.complete]
call = "tasks.complete:main"
help = "Create autocomplete files for bash and fish"

[tool.pdm.dev-dependencies]
test = [
    "pdm[pytest]",
    "pytest-cov",
    "pytest-xdist>=1.31.0",
    "pytest-rerunfailures>=10.2",
    "pytest-httpserver>=1.0.6",
]
tox = [
    "tox",
    "tox-pdm>=0.5",
]
doc = [
    "mkdocs>=1.1",
    "mkdocs-material>=7.3",
    "mkdocstrings[python]>=0.18",
    "setuptools>=62.3.3",
    "markdown-exec>=0.7.0",
    "mkdocs-redirects>=1.2.0",
    "mkdocs-version-annotations>=1.0.0",
]
workflow = [
    "parver>=0.3.1",
    "towncrier>=20",
    "pycomplete~=0.3",
]

[tool.ruff]
line-length = 120
exclude = [
    "tests/fixtures",
]
target-version = "py38"
src = [
    "src",
]

[tool.ruff.lint]
extend-select = [
    "I",
    "B",
    "C4",
    "FA",
    "PGH",
    "RUF",
    "W",
    "UP",
    "YTT",
]
extend-ignore = [
    "B018",
    "B019",
    "RUF018",
]

[tool.ruff.lint.mccabe]
max-complexity = 10

[tool.ruff.lint.isort]
known-first-party = [
    "pdm",
]

[tool.towncrier]
package = "pdm"
filename = "CHANGELOG.md"
issue_format = "[#{issue}](https://github.com/pdm-project/pdm/issues/{issue})"
directory = "news/"
title_format = "## Release v{version} ({project_date})"
underlines = [
    "",
    "",
    "",
]
type = [
    { directory = "break", name = "Breaking Changes", showcontent = true },
    { directory = "feature", name = "Features & Improvements", showcontent = true },
    { directory = "bugfix", name = "Bug Fixes", showcontent = true },
    { directory = "doc", name = "Documentation", showcontent = true },
    { directory = "dep", name = "Dependencies", showcontent = true },
    { directory = "removal", name = "Removals and Deprecations", showcontent = true },
    { directory = "misc", name = "Miscellany", showcontent = true },
]

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning",
]
markers = [
    "network: Tests that require network",
    "integration: Run with all Python versions",
    "path: Tests that compare with the system paths",
    "deprecated: Tests about deprecated features",
]
addopts = "-r aR"
testpaths = [
    "tests/",
]

[tool.codespell]
ignore-words-list = "ba,overriden,te"

[tool.coverage.run]
branch = true
source = [
    "pdm",
]
omit = [
    "*/pdm/__main__.py",
    "*/pdm/pep582/sitecustomize.py",
    "*/pdm/models/in_process/*.py",
    "*/pdm/models/setup.py",
    "*/pdm-test-*-env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
]
ignore_errors = true

[tool.mypy]
follow_imports = "silent"
ignore_missing_imports = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
exclude = "pdm/(pep582/|models/in_process/.+\\.py)"
namespace_packages = true
mypy_path = "src"
explicit_package_bases = true
