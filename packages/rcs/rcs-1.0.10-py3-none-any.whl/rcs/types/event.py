# This file was auto-generated by Fern from our API Definition.

from ..core.pydantic_utilities import UniversalBaseModel
import pydantic
import typing
import datetime as dt
from ..core.pydantic_utilities import IS_PYDANTIC_V2


class Event(UniversalBaseModel):
    title: str = pydantic.Field()
    """
    The title for the event action. Maximum length is 25 characters.
    """

    action_type: typing.Literal["calendar"] = pydantic.Field(default="calendar")
    """
    The type of message being sent
    """

    start_time: dt.datetime = pydantic.Field()
    """
    The start time for the event.
    """

    end_time: dt.datetime = pydantic.Field()
    """
    The end time for the event.
    """

    event_title: str = pydantic.Field()
    """
    The title of the event.
    """

    event_description: typing.Optional[str] = pydantic.Field(default=None)
    """
    The description of the event
    """

    if IS_PYDANTIC_V2:
        model_config: typing.ClassVar[pydantic.ConfigDict] = pydantic.ConfigDict(extra="allow", frozen=True)  # type: ignore # Pydantic v2
    else:

        class Config:
            frozen = True
            smart_union = True
            extra = pydantic.Extra.allow
