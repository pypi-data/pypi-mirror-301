# coding: utf-8

"""
    Aron API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)  # noqa: E501

    The version of the OpenAPI document: 1.0.0
    Generated by: https://openapi-generator.tech
"""


try:
    from inspect import getfullargspec
except ImportError:
    from inspect import getargspec as getfullargspec
import pprint
import re  # noqa: F401
import six

from openapi_client.configuration import Configuration


class OrganizationOrganizationBillingReadResponse(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'credit_balance': 'float',
        'discounted_on_demand_amount': 'float',
        'discounted_on_premise_amount': 'float',
        'discounted_seats_amount': 'float',
        'invoice_status': 'str',
        'invoice_url': 'str',
        'on_demand_amount': 'float',
        'on_premise_amount': 'float',
        'on_premise_node_count': 'int',
        'payment_card_last_digits': 'str',
        'seats_amount': 'float'
    }

    attribute_map = {
        'credit_balance': 'credit_balance',
        'discounted_on_demand_amount': 'discounted_on_demand_amount',
        'discounted_on_premise_amount': 'discounted_on_premise_amount',
        'discounted_seats_amount': 'discounted_seats_amount',
        'invoice_status': 'invoice_status',
        'invoice_url': 'invoice_url',
        'on_demand_amount': 'on_demand_amount',
        'on_premise_amount': 'on_premise_amount',
        'on_premise_node_count': 'on_premise_node_count',
        'payment_card_last_digits': 'payment_card_last_digits',
        'seats_amount': 'seats_amount'
    }

    def __init__(self, credit_balance=None, discounted_on_demand_amount=None, discounted_on_premise_amount=None, discounted_seats_amount=None, invoice_status=None, invoice_url=None, on_demand_amount=None, on_premise_amount=None, on_premise_node_count=None, payment_card_last_digits=None, seats_amount=None, local_vars_configuration=None):  # noqa: E501
        """OrganizationOrganizationBillingReadResponse - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration.get_default_copy()
        self.local_vars_configuration = local_vars_configuration

        self._credit_balance = None
        self._discounted_on_demand_amount = None
        self._discounted_on_premise_amount = None
        self._discounted_seats_amount = None
        self._invoice_status = None
        self._invoice_url = None
        self._on_demand_amount = None
        self._on_premise_amount = None
        self._on_premise_node_count = None
        self._payment_card_last_digits = None
        self._seats_amount = None
        self.discriminator = None

        self.credit_balance = credit_balance
        self.discounted_on_demand_amount = discounted_on_demand_amount
        self.discounted_on_premise_amount = discounted_on_premise_amount
        self.discounted_seats_amount = discounted_seats_amount
        self.invoice_status = invoice_status
        self.invoice_url = invoice_url
        self.on_demand_amount = on_demand_amount
        self.on_premise_amount = on_premise_amount
        self.on_premise_node_count = on_premise_node_count
        self.payment_card_last_digits = payment_card_last_digits
        self.seats_amount = seats_amount

    @property
    def credit_balance(self):
        """Gets the credit_balance of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The credit_balance of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._credit_balance

    @credit_balance.setter
    def credit_balance(self, credit_balance):
        """Sets the credit_balance of this OrganizationOrganizationBillingReadResponse.


        :param credit_balance: The credit_balance of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type credit_balance: float
        """
        if self.local_vars_configuration.client_side_validation and credit_balance is None:  # noqa: E501
            raise ValueError("Invalid value for `credit_balance`, must not be `None`")  # noqa: E501

        self._credit_balance = credit_balance

    @property
    def discounted_on_demand_amount(self):
        """Gets the discounted_on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The discounted_on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._discounted_on_demand_amount

    @discounted_on_demand_amount.setter
    def discounted_on_demand_amount(self, discounted_on_demand_amount):
        """Sets the discounted_on_demand_amount of this OrganizationOrganizationBillingReadResponse.


        :param discounted_on_demand_amount: The discounted_on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type discounted_on_demand_amount: float
        """
        if self.local_vars_configuration.client_side_validation and discounted_on_demand_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `discounted_on_demand_amount`, must not be `None`")  # noqa: E501

        self._discounted_on_demand_amount = discounted_on_demand_amount

    @property
    def discounted_on_premise_amount(self):
        """Gets the discounted_on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The discounted_on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._discounted_on_premise_amount

    @discounted_on_premise_amount.setter
    def discounted_on_premise_amount(self, discounted_on_premise_amount):
        """Sets the discounted_on_premise_amount of this OrganizationOrganizationBillingReadResponse.


        :param discounted_on_premise_amount: The discounted_on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type discounted_on_premise_amount: float
        """
        if self.local_vars_configuration.client_side_validation and discounted_on_premise_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `discounted_on_premise_amount`, must not be `None`")  # noqa: E501

        self._discounted_on_premise_amount = discounted_on_premise_amount

    @property
    def discounted_seats_amount(self):
        """Gets the discounted_seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The discounted_seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._discounted_seats_amount

    @discounted_seats_amount.setter
    def discounted_seats_amount(self, discounted_seats_amount):
        """Sets the discounted_seats_amount of this OrganizationOrganizationBillingReadResponse.


        :param discounted_seats_amount: The discounted_seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type discounted_seats_amount: float
        """
        if self.local_vars_configuration.client_side_validation and discounted_seats_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `discounted_seats_amount`, must not be `None`")  # noqa: E501

        self._discounted_seats_amount = discounted_seats_amount

    @property
    def invoice_status(self):
        """Gets the invoice_status of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The invoice_status of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_status

    @invoice_status.setter
    def invoice_status(self, invoice_status):
        """Sets the invoice_status of this OrganizationOrganizationBillingReadResponse.


        :param invoice_status: The invoice_status of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type invoice_status: str
        """
        if self.local_vars_configuration.client_side_validation and invoice_status is None:  # noqa: E501
            raise ValueError("Invalid value for `invoice_status`, must not be `None`")  # noqa: E501

        self._invoice_status = invoice_status

    @property
    def invoice_url(self):
        """Gets the invoice_url of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The invoice_url of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: str
        """
        return self._invoice_url

    @invoice_url.setter
    def invoice_url(self, invoice_url):
        """Sets the invoice_url of this OrganizationOrganizationBillingReadResponse.


        :param invoice_url: The invoice_url of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type invoice_url: str
        """
        if self.local_vars_configuration.client_side_validation and invoice_url is None:  # noqa: E501
            raise ValueError("Invalid value for `invoice_url`, must not be `None`")  # noqa: E501

        self._invoice_url = invoice_url

    @property
    def on_demand_amount(self):
        """Gets the on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._on_demand_amount

    @on_demand_amount.setter
    def on_demand_amount(self, on_demand_amount):
        """Sets the on_demand_amount of this OrganizationOrganizationBillingReadResponse.


        :param on_demand_amount: The on_demand_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type on_demand_amount: float
        """
        if self.local_vars_configuration.client_side_validation and on_demand_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `on_demand_amount`, must not be `None`")  # noqa: E501

        self._on_demand_amount = on_demand_amount

    @property
    def on_premise_amount(self):
        """Gets the on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._on_premise_amount

    @on_premise_amount.setter
    def on_premise_amount(self, on_premise_amount):
        """Sets the on_premise_amount of this OrganizationOrganizationBillingReadResponse.


        :param on_premise_amount: The on_premise_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type on_premise_amount: float
        """
        if self.local_vars_configuration.client_side_validation and on_premise_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `on_premise_amount`, must not be `None`")  # noqa: E501

        self._on_premise_amount = on_premise_amount

    @property
    def on_premise_node_count(self):
        """Gets the on_premise_node_count of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The on_premise_node_count of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: int
        """
        return self._on_premise_node_count

    @on_premise_node_count.setter
    def on_premise_node_count(self, on_premise_node_count):
        """Sets the on_premise_node_count of this OrganizationOrganizationBillingReadResponse.


        :param on_premise_node_count: The on_premise_node_count of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type on_premise_node_count: int
        """
        if self.local_vars_configuration.client_side_validation and on_premise_node_count is None:  # noqa: E501
            raise ValueError("Invalid value for `on_premise_node_count`, must not be `None`")  # noqa: E501

        self._on_premise_node_count = on_premise_node_count

    @property
    def payment_card_last_digits(self):
        """Gets the payment_card_last_digits of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The payment_card_last_digits of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: str
        """
        return self._payment_card_last_digits

    @payment_card_last_digits.setter
    def payment_card_last_digits(self, payment_card_last_digits):
        """Sets the payment_card_last_digits of this OrganizationOrganizationBillingReadResponse.


        :param payment_card_last_digits: The payment_card_last_digits of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type payment_card_last_digits: str
        """
        if self.local_vars_configuration.client_side_validation and payment_card_last_digits is None:  # noqa: E501
            raise ValueError("Invalid value for `payment_card_last_digits`, must not be `None`")  # noqa: E501

        self._payment_card_last_digits = payment_card_last_digits

    @property
    def seats_amount(self):
        """Gets the seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501


        :return: The seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :rtype: float
        """
        return self._seats_amount

    @seats_amount.setter
    def seats_amount(self, seats_amount):
        """Sets the seats_amount of this OrganizationOrganizationBillingReadResponse.


        :param seats_amount: The seats_amount of this OrganizationOrganizationBillingReadResponse.  # noqa: E501
        :type seats_amount: float
        """
        if self.local_vars_configuration.client_side_validation and seats_amount is None:  # noqa: E501
            raise ValueError("Invalid value for `seats_amount`, must not be `None`")  # noqa: E501

        self._seats_amount = seats_amount

    def to_dict(self, serialize=False):
        """Returns the model properties as a dict"""
        result = {}

        def convert(x):
            if hasattr(x, "to_dict"):
                args = getfullargspec(x.to_dict).args
                if len(args) == 1:
                    return x.to_dict()
                else:
                    return x.to_dict(serialize)
            else:
                return x

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            attr = self.attribute_map.get(attr, attr) if serialize else attr
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: convert(x),
                    value
                ))
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], convert(item[1])),
                    value.items()
                ))
            else:
                result[attr] = convert(value)

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OrganizationOrganizationBillingReadResponse):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OrganizationOrganizationBillingReadResponse):
            return True

        return self.to_dict() != other.to_dict()
