# coding: utf-8

"""
    Conekta API

    Conekta sdk  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: engineering@conekta.com
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest

import conekta
from conekta import ApiClient
from conekta.api.antifraud_api import AntifraudApi  # noqa: E501
from conekta.rest import ApiException
from test.test_utils import get_base_path


class TestAntifraudApi(unittest.TestCase):
    """AntifraudApi unit test stubs"""

    def setUp(self):
        self.api = conekta.api.antifraud_api.AntifraudApi(ApiClient(
            configuration=conekta.Configuration(host=get_base_path())
        ))  # noqa: E501

    def tearDown(self):
        pass

    def test_create_rule_blacklist(self):
        """Test case for create_rule_blacklist

        Create blacklisted rule  # noqa: E501
        """
        accept_language = 'es'
        create_risk_rules_data = conekta.CreateRiskRulesData(
            description='description',
            field='field',
            value='value'
        )
        response = self.api.create_rule_blacklist(create_risk_rules_data, accept_language)
        self.assertIsNotNone(response)

    def test_create_rule_whitelist(self):
        """Test case for create_rule_whitelist

        Create whitelisted rule  # noqa: E501
        """
        accept_language = 'es'
        create_risk_rules_data = conekta.CreateRiskRulesData(
            description='description',
            field='field',
            value='value'
        )
        response = self.api.create_rule_whitelist(accept_language, create_risk_rules_data)
        self.assertIsNotNone(response)

    def test_delete_rule_blacklist(self):
        """Test case for delete_rule_blacklist

        Delete blacklisted rule  # noqa: E501
        """
        response = self.api.delete_rule_blacklist('618c3f30db8b8da9be376b1e')
        self.assertIsNotNone(response)

    def test_delete_rule_whitelist(self):
        """Test case for delete_rule_whitelist

        Delete whitelisted rule  # noqa: E501
        """
        response = self.api.delete_rule_whitelist('618c3f30db8b8da9be376b1e')
        self.assertIsNotNone(response)

    def test_get_rule_blacklist(self):
        """Test case for get_rule_blacklist

        Get list of blacklisted rules  # noqa: E501
        """
        response = self.api.get_rule_blacklist('618c3f30db8b8da9be376b1e')
        self.assertIsNotNone(response)

    def test_get_rule_whitelist(self):
        """Test case for get_rule_whitelist

        Get a list of whitelisted rules  # noqa: E501
        """
        response = self.api.get_rule_whitelist('618c3f30db8b8da9be376b1e')
        self.assertIsNotNone(response)


if __name__ == '__main__':
    unittest.main()
