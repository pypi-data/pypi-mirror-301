# Copyright (c) 2020 Adam Karpierz
# SPDX-License-Identifier: Zlib

[build-system]
build-backend = 'setuptools.build_meta'
requires = ['setuptools>=75.1.0', 'wheel>=0.44.0', 'packaging>=24.1.0', 'tox>=4.21.2']

[project]
name        = 'pkg-about'
version     = '1.2.1'
description = 'Shares Python package metadata at runtime.'
urls.Homepage      = 'https://pypi.org/project/pkg-about/'
urls.Documentation = 'https://pkg-about.readthedocs.io/'
urls.Download      = 'https://pypi.org/project/pkg-about/'
urls.Source        = 'https://github.com/karpierz/pkg-about'
urls.Issues        = 'https://github.com/karpierz/pkg-about/issues'
license = { text = 'zlib/libpng License ; https://opensource.org/license/zlib' }
authors = [
    { name  = 'Adam Karpierz' },
    { email = 'adam@karpierz.net' },
]
maintainers = [
    { name  = 'Adam Karpierz' },
    { email = 'adam@karpierz.net' },
]
keywords = ['pkg-about', 'pkg_about', '__about__', 'packaging']
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: zlib/libpng License',
    'Operating System :: OS Independent',
    'Natural Language :: Polish',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3 :: Only',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development :: Libraries :: Python Modules',
]
requires-python = '>=3.9.0,<4.0.0'
dependencies = [
    # mandatory
    'setuptools>=75.1.0',
    'packaging>=24.1.0',
    'importlib-metadata>=8.5.0',
    'tomli>=2.0.2 ; python_version < "3.11"',
    'docutils>=0.21.2',
    # others
]
dynamic = ['readme']
[project.optional-dependencies]
doc = [
    'Sphinx>=7.4.7',
    'sphinx-toolbox>=3.8.0',
    'sphinx-tabs>=3.4.7',
    'sphinx-copybutton>=0.5.2',
    'sphinxcontrib-spelling>=8.0.0',
    'sphinx-lint>=1.0.0',
    'restructuredtext-lint>=1.4.0',
    'nbsphinx>=0.9.5',
]
test = [
    'deepdiff>=8.0.1',
    'rich>=13.9.2',
]

[project.scripts]
#'pkg_about' = 'pkg_about.__main__:main'

[project.gui-scripts]
#'pkg_about-gui' = 'pkg_about:main_gui'

#[project.entry-points.'pkg_about.magical']
#epoint = 'pkg_about:main_epoint'

[tool.setuptools.dynamic]
readme = { file = ['README.rst', 'CHANGES.rst'], content-type = 'text/x-rst; charset=UTF-8' }

[tool.setuptools]
license-files = ['LICENSE']
include-package-data = true
platforms = ['any']
zip-safe = true

[tool.setuptools.packages.find]
namespaces = false
where = ['src']

[tool.setuptools.package-dir]
'' = 'src'
#'pkg_about.tests' = 'tests'

[tool.setuptools.package-data]
pkg_about = [
]

[tool.setuptools.exclude-package-data]
'*' = ['*.c','*.h','*.cpp','*.hpp','*.cxx','*.hxx','*.pyx','*.pxd']
pkg_about = [
]

[tool.coverage.run]
source = [
    'pkg_about',
    'tests',
]
omit = [
]
data_file = '.tox/coverage/.coverage'
plugins = ['covdefaults']

[tool.coverage.report]
exclude_lines = [
    # Regexes
    # Have to re-enable the standard pragma
    '^\s*if\s+self\.debug\s*:',
    '^\s*if\s+__debug__\s*:',
    '^\s*if\s+(0|False)\s*:',
    '''if\s+__name__.*\s*==\s*['"]__main__['"]\s*:''',
    '^\s*@unittest\.skip\(',
    '^\s*@unittest\.skipIf\(sys\.platform\.startswith\("win"\)',
]
omit = [
    'tests/run.py',
]
skip_covered = false

[tool.coverage.html]
directory = '.tox/coverage/.coverage.html'

[tool.flake8]
filename = ['*.py','*.pyx']
#include = ['tests']
#exclude = ['.tox','*.egg','.git','__pycache__','build','_build','docs/_build','dist']
max-line-length = 99
ignore = ['E126','E203','E221','E251','E302','E701','E702','E731',
          'E122','E127','E128','E222','E272','E241','E266','E226','E704',
          'D100','D101','D102','D103','D104','D400','D401','D202',
          'N806','N802','N803','N801',
          'I100','W503']
# (e.g. 'E4','W') default: 'E121','E123','126','226','E24','704'
#select =
#select = ['E','W','F','N','I']
output-file = '.tox/lint/flake8out.txt'
count = true
#show-pep8,
#show-source
#verbose
#quiet

#
# Configuration(s) for tox
#

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{39,310,311,312,313}, pypy{39,310}, docs
labels =
    py = py{39,310,311,312,313}, pypy{39,310}
    prepare = prepare
    coverage = coverage
    lint = lint
    docs = docs
    build  = py{39,310,311,312,313}, pypy{39,310}, docs, build
    deploy = py{39,310,311,312,313}, pypy{39,310}, docs, build, publish
minversion = 4.21.2
skip_missing_interpreters = true
requires =
    {[base]deps}
    virtualenv>=20.26.6
    tox-tags>=0.2.0

[base]
basepython = python3.12
deps =
    pip>=24.2.0
    setuptools>=75.1.0
    wheel>=0.44.0
packagesubdir = pkg_about

[testenv]
passenv = WINDIR
setenv =
    PYTHONDONTWRITEBYTECODE = 1
commands =
    {envpython} --version
    {envpython} -m tests {posargs}
extras = test
deps =
    {[base]deps}

[testenv:prepare]
basepython = {[base]basepython}
skip_install = true
allowlist_externals =
    cmd
    .build
commands =
    cmd /C if exist .build.cmd .build.cmd

[testenv:coverage]
basepython = {[base]basepython}
commands =
    {envpython} -m coverage erase
    -{envpython} -m coverage run -m tests {posargs}
    {envpython} -m coverage report
    {envpython} -m coverage html
deps =
    {[testenv]deps}
    coverage>=7.6.2
    covdefaults>=2.3.0
    diff-cover>=9.2.0

[testenv:docs]
basepython = {[base]basepython}
commands =
    {envpython} -m sphinxlint --ignore .tox --ignore build --ignore dist
   #{envpython} -m sphinx.apidoc -f {envsitepackagesdir}/{[base]packagesubdir}
    {envpython} -m sphinx.cmd.build -W -a -b html -E   ./docs ./build/docs/html
    {envpython} -m sphinx.cmd.build -W -a -b linkcheck ./docs ./build/docs/html
    {envpython} -m sphinx.cmd.build -W -a -b doctest   ./docs ./build/docs/html
extras = doc
deps =

[testenv:build]
depends = py{39,310,311,312,313}, pypy{39,310}, docs
basepython = {[base]basepython}
commands =
    {envpython} -W ignore -c "from setuptools import setup ; setup()" --quiet sdist --formats=zip
    {envpython} -W ignore -c "from setuptools import setup ; setup()" --quiet bdist_wheel
    # check out for PyPi
    {envpython} -m twine check dist/*
deps =
    {[testenv]deps}
    twine>=5.1.1

[testenv:publish]
depends = build
basepython = {[base]basepython}
skip_install = true
commands =
    # publish on PyPi
    {envpython} -m twine upload dist/*
extras =
deps =
    twine>=5.1.1

[testenv:lint]
basepython = {[base]basepython}
commands =
    {envpython} -m flake8 {envsitepackagesdir}/{[base]packagesubdir}/
extras =
deps =
    {[testenv]deps}
    flake8>=7.1.1
    flake8-pyproject>=1.2.3
    flake8-docstrings>=1.7.0
    pep8-naming>=0.14.1
    flake8-builtins>=2.5.0
    flake8-deprecated>=2.2.1
"""
