Metadata-Version: 2.1
Name: charm-tools
Version: 3.0.8
Summary: Tools for building and maintaining Juju charms
Home-page: https://github.com/juju/charm-tools
Maintainer: Cory Johns
Maintainer-email: johnsca@gmail.com
License: GPL v3
Classifier: Development Status :: 5 - Production/Stable
Classifier: Intended Audience :: Developers
Classifier: Programming Language :: Python
License-File: COPYING
License-File: AUTHORS
Requires-Dist: cheetah3<4.0,>=3.0.0
Requires-Dist: pyyaml!=5.4.0,!=5.4.1,!=6.0,<7.0,>=5.0
Requires-Dist: requests<3.0.0,>=2.0.0
Requires-Dist: blessings<2.0
Requires-Dist: ruamel.yaml<0.16.0; python_version < "3.7"
Requires-Dist: pathspec<=0.3.4; python_version < "3.7"
Requires-Dist: ruamel.yaml<0.18; python_version >= "3.7"
Requires-Dist: pathspec<0.11; python_version >= "3.7"
Requires-Dist: otherstuf<=1.1.0
Requires-Dist: path<17
Requires-Dist: pip>=1.5.4
Requires-Dist: jujubundlelib<0.6
Requires-Dist: virtualenv<21,>=1.11.4
Requires-Dist: colander<1.9
Requires-Dist: jsonschema<4.18.0
Requires-Dist: keyring<24
Requires-Dist: secretstorage<3.4
Requires-Dist: dict2colander==0.2
Requires-Dist: vergit<2.0.0,>=1.0.0
Requires-Dist: requirements-parser<0.6

Juju Charm Tools
================

|build|

.. |build| image:: https://snapcraft.io/charm/badge.svg
    :target: https://snapcraft.io/charm

This is a collection of tools to make writing Juju charms easier. See Juju's
home page for more information.

https://jujucharms.com/


Installation
------------

To run the latest stable release, use::

    sudo snap install charm --classic

You'll also almost certainly want to install Juju as well::

    sudo snap install juju --classic

If you want to run the latest pre-release versions, you can use the
other snap channels.  For example::

    sudo snap install charm --channel=edge

The available channels are: stable, candidate, beta, and edge.

  Note: While charm-tools is also available on PyPI (for use as a Python
  dependency) and is generally kept up to date there with stable releases,
  the snap should always be used instead, if at all possible.


Usage
-----

To see a list of available commands, use::

    charm help

The most commonly used commands are the charm life-cycle commands::

    charm create    # create a new charm
    charm build     # build a charm using layers
    charm proof     # validate a charm via the linter
    charm login     # login to the charm store
    charm push      # push a charm to the store
    charm release   # release a pushed charm to the public
    charm show      # show information about a charm in the store
