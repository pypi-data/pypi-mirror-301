# Define aliases for IP's so IP changes just need to changed here
iplist:
  home: "192.168.1.1"
  office: "10.0.0.2"

# Default values, which applies to domains, if the fields are missing
# And only when completely missing in domain. Its not added if domain
# has other entries defines or is defined and empty.
# The special string {DOMAIN} will be replaced for the actual domain
default:
  provider: "testprovider"
  mx:
    - priority: 10
      value: "mx1.mail.com"
    - priority: 20
      value: "mx2.mail.com"
  txt:
    - name: ~
      value: "v=spf1 a mx include:spf.mail.com -all"
    - name: "_dmarc"
      value: "v=DMARC1; p=quarantine; fo=1; rua=mailto:admin@{DOMAIN}"
  cname:
    www: ~
    test: "@"
  # Dkim records are added as CNAME records
  dkim:
    "key._domainkey": "dkim_key.{DOMAIN}"

# Domain definitions.
# Notice that ~, "~" and "@" are all synonyms for an empty host field
domains:
  # Domain with an IP alias and most fields specified
  example.com:
    ip: "office"
    a:
      mail: "home"
      home: "home"
    cname:
      sub1: "@"
      sub2: "~"
      sub3: "altdomain.com"
    mx:
      10: "mail.example.com"
  # Domain with just a single A record and the rest inherited from default
  mydomain.com:
    ip: "home"
  # Domain with empty fields to ensure defaults are NOT inherited
  newdomain.com:
    ip: "home"
    cname:
    txt:
    mx:
