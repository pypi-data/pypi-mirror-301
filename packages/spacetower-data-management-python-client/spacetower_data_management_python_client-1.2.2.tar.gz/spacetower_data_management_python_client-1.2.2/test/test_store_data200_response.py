# coding: utf-8

"""
    Data Management API

    The <b>Data Management</b> component provides facilities to store space data such as leap second, EOP (Earth Orientation Parameters) or space weather forcecasts in a centralized way, such that these data can be used by all the  components of the FDS.  The following main concepts are used:  <ul>   <li><b>Repositories</b>are folders in which all the data belonging to a same   type (e.g. LEAP_SECOND) are stored</li>   <li><b>References data</b> represents the data that will be used by default   by all the components of the system</li> </ul>  A reference data is always an existing data stored in a repository, but only one  data stored in a repository (for a given type) can be a reference data. 

    The version of the OpenAPI document: 1.2.2
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from spacetower_data_management_python_client.models.store_data200_response import StoreData200Response

class TestStoreData200Response(unittest.TestCase):
    """StoreData200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> StoreData200Response:
        """Test StoreData200Response
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `StoreData200Response`
        """
        model = StoreData200Response()
        if include_optional:
            return StoreData200Response(
                id = '',
                type = '',
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f')
            )
        else:
            return StoreData200Response(
                id = '',
                type = '',
                creation_date = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'),
        )
        """

    def testStoreData200Response(self):
        """Test StoreData200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
