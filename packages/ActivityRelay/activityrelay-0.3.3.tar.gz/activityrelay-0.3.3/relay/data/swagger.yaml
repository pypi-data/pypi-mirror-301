swagger: "2.0"
info:
  description: |
    ActivityRelay API
  version: "0.2.5"
  title: ActivityRelay API
  license:
    name: AGPL 3
    url: https://www.gnu.org/licenses/agpl-3.0.en.html

basePath: /api
schemes:
  - https

securityDefinitions:
  Cookie:
    type: apiKey
    in: cookie
    name: user-token
  Bearer:
    type: oauth2
    name: Authorization
    in: header
    flow: accessCode
    authorizationUrl: /oauth/authorize
    tokenUrl: /oauth/token

paths:
  /:
    get:
      tags:
      - Global
      description: Attributes that apply to all endpoints
      responses:
        "401":
          description: Token is missing or invalid
          schema:
            $ref: "#/definitions/Error"

  /oauth/authorize:
    get:
      tags:
      - OAuth
      description: Get an authorization code
      parameters:
      - in: query
        name: response-type
        required: true
        type: string
      - in: query
        name: client_id
        required: true
        type: string
      - in: query
        name: redirect_uri
        required: true
        type: string

  /oauth/token:
    post:
      tags:
      - OAuth
      description: Get a token for an authorized app
      parameters:
      - in: formData
        name: grant_type
        required: true
        type: string
      - in: formData
        name: code
        required: true
        type: string
      - in: formData
        name: client_id
        required: true
        type: string
      - in: formData
        name: client_secret
        required: true
        type: string
      - in: formData
        name: redirect_uri
        required: true
        type: string
      consumes:
      - application/x-www-form-urlencoded
      - application/json
      - multipart/form-data
      produces:
      - application/json
      responses:
        "200":
          description: Application
          schema:
            $ref: "#/definitions/Application"

  /oauth/revoke:
    post:
      tags:
      - OAuth
      description: Get a token for an authorized app
      parameters:
      - in: formData
        name: client_id
        required: true
        type: string
      - in: formData
        name: client_secret
        required: true
        type: string
      - in: formData
        name: token
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Message confirming application deletion
          schema:
            $ref: "#/definitions/Message"

  /v1/app:
    get:
      tags:
      - Applications
      description: Verify the token is valid
      produces:
      - application/json
      responses:
        "200":
          description: Application with the associated token
          schema:
            $ref: "#/definitions/Application"

    post:
      tags:
      - Applications
      description: Create a new application
      parameters:
      - in: query
        name: name
        required: true
        type: string
      - in: query
        name: redirect_uri
        required: true
        type: string
      - in: query
        name: website
        required: false
        type: string
        format: url
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Newly created application
          schema:
            $ref: "#/definitions/Application"

    delete:
      tags:
      - Applications
      description: Deletes an application
      parameters:
      - in: formData
        name: client_id
        required: true
        type: string
      - in: formData
        name: client_secret
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Confirmation of application deletion
          schema:
            $ref: "#/definitions/Message"

  /v1/relay:
    get:
      tags:
      - Relay
      description: Info about the relay instance
      produces:
      - application/json
      responses:
        "200":
          description: Relay info
          schema:
            $ref: "#/definitions/Info"

  /v1/login:
    post:
      tags:
      - Login
      description: Login with a username and password
      parameters:
      - in: formData
        name: username
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: A new Application
          schema:
            $ref: "#/definitions/Application"

  /v1/config:
    get:
      tags:
      - Config
      description: Get the current config values
      produces:
      - application/json
      responses:
        "200":
          description: Config values
          schema:
            $ref: "#/definitions/Config"

    post:
      tags:
      - Config
      description: Set a config value
      parameters:
      - in: formData
        name: key
        required: true
        type: string
      - in: formData
        name: value
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Value was set
          schema:
            $ref: "#/definitions/Message"
        "400":
          description: Key is invalid
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - Config
      description: Set a config option to default
      parameters:
      - in: formData
        name: key
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Value was reset
          schema:
            $ref: "#/definitions/Message"
        "400":
          description: Key is invalid
          schema:
            $ref: "#/definitions/Error"

  /v1/instance:
    get:
      tags:
      - Instance
      description: Get the list of subscribed instances
      produces:
      - application/json
      responses:
        "200":
          description: List of instances
          schema:
            type: array
            items:
              $ref: "#/definitions/Instance"

    post:
      tags:
      - Instance
      description: Add an instance
      parameters:
      - in: formData
        name: actor
        required: true
        type: string
      - in: formData
        name: inbox
        required: false
        type: string
        format: url
      - in: formData
        name: software
        required: false
        type: string
      - in: formData
        name: followid
        required: false
        type: string
        format: url
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Newly added instance
          schema:
            $ref: "#/definitions/Instance"
        "500":
          description: Failed to fetch actor
          schema:
            $ref: "#/definitions/Error"

    patch:
      tags:
      - Instance
      description: Update an instance
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      - in: formData
        name: actor
        required: false
        type: string
      - in: formData
        name: inbox
        required: false
        type: string
        format: url
      - in: formData
        name: software
        required: false
        type: string
      - in: formData
        name: followid
        required: false
        type: string
        format: url
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Updated instance data
          schema:
            $ref: "#/definitions/Instance"
        "404":
          description: Instance with the specified domain does not exist
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - Instance
      description: Remove an instance from the relay
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Instance was removed
          schema:
            $ref: "#/definitions/Message"
        "404":
          description: Instance with the specified domain does not exist
          schema:
            $ref: "#/definitions/Error"

  /v1/request:
    get:
      tags:
      - Follow Request
      description: Get the list of follow requests
      produces:
      - application/json
      responses:
        "200":
          description: List of instances
          schema:
            type: array
            items:
              $ref: "#/definitions/Instance"

    post:
      tags:
      - Follow Request
      description: Approve or deny a follow request
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      - in: formData
        name: accept
        required: true
        type: boolean
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Follow request successfully accepted or denied
          schema:
            $ref: "#/definitions/Message"
        "500":
          description: Follow request does not exist
          schema:
            $ref: "#/definitions/Error"

  /v1/domain_ban:
    get:
      tags:
      - Domain Ban
      description: Get a list of all banned domains
      produces:
      - application/json
      responses:
        "200":
          description: List of banned domains
          schema:
            type: array
            items:
              $ref: "#/definitions/DomainBan"

    post:
      tags:
      - Domain Ban
      description: Ban a domain
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      - in: formData
        name: reason
        required: false
        type: string
      - in: formData
        name: note
        required: false
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: New domain ban
          schema:
            $ref: "#/definitions/DomainBan"
        "404":
          description: Domain ban already exists
          schema:
            $ref: "#/definitions/Error"

    patch:
      tags:
      - Domain Ban
      description: Update a banned domain
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      - in: formData
        name: reason
        required: false
        type: string
      - in: formData
        name: note
        required: false
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Updated domain ban
          schema:
            $ref: "#/definitions/DomainBan"
        "400":
          description: A reason or note was not specified
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Domain ban doesn't exist
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - Domain Ban
      description: Unban a domain
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Unbanned domain
          schema:
            $ref: "#/definitions/Message"
        "404":
          description: Domain ban doesn't exist
          schema:
            $ref: "#/definitions/Error"

  /v1/software_ban:
    get:
      tags:
      - Software Ban
      description: Get a list of all banned software
      produces:
      - application/json
      responses:
        "200":
          description: List of banned software
          schema:
            type: array
            items:
              $ref: "#/definitions/SoftwareBan"

    post:
      tags:
      - Software Ban
      description: Ban software
      parameters:
      - in: formData
        name: name
        required: true
        type: string
      - in: formData
        name: reason
        required: false
        type: string
      - in: formData
        name: note
        required: false
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: New software ban
          schema:
            $ref: "#/definitions/SoftwareBan"
        "404":
          description: Software ban already exists
          schema:
            $ref: "#/definitions/Error"

    patch:
      tags:
      - Software Ban
      description: Update banned software
      parameters:
      - in: formData
        name: name
        required: true
        type: string
      - in: formData
        name: reason
        required: false
        type: string
      - in: formData
        name: note
        required: false
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Updated software ban
          schema:
            $ref: "#/definitions/SoftwareBan"
        "400":
          description: A reason or note was not specified
          schema:
            $ref: "#/definitions/Error"
        "404":
          description: Software ban doesn't exist
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - Software Ban
      description: Unban software
      parameters:
      - in: formData
        name: name
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Unbanned software
          schema:
            $ref: "#/definitions/Message"
        "404":
          description: Software ban doesn't exist
          schema:
            $ref: "#/definitions/Error"

  /v1/user:
    get:
      tags:
      - User
      description: Get a list of all local users
      produces:
      - application/json
      responses:
        "200":
          description: List of users
          schema:
            type: array
            items:
              $ref: "#/definitions/User"

    post:
      tags:
      - User
      description: Create a new user
      parameters:
      - in: formData
        name: username
        required: true
        type: string
      - in: formData
        name: password
        required: true
        type: string
        format: password
      - in: formData
        name: handle
        required: false
        type: string
        format: email
      produces:
      - application/json
      responses:
        "200":
          description: Newly created user
          schema:
            $ref: "#/definitions/User"
        "404":
          description: User already exists
          schema:
            $ref: "#/definitions/Error"

    patch:
      tags:
      - User
      description: Update a user's password or handle
      parameters:
      - in: formData
        name: username
        required: true
        type: string
      - in: formData
        name: password
        required: false
        type: string
        format: password
      - in: formData
        name: handle
        required: false
        type: string
        format: email
      produces:
      - application/json
      responses:
        "200":
          description: Updated user data
          schema:
            $ref: "#/definitions/User"
        "404":
          description: User does not exist
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - User
      description: Delete a user
      parameters:
      - in: formData
        name: username
        required: true
        type: string
      produces:
      - application/json
      responses:
        "202":
          description: Successfully deleted user
          schema:
            $ref: "#/definitions/Message"
        "404":
          description: User not found
          schema:
            $ref: "#/definitions/Error"

  /v1/whitelist:
    get:
      tags:
      - Whitelist
      description: Get a list of all whitelisted domains
      produces:
      - application/json
      responses:
        "200":
          description: List of whitelisted domains
          schema:
            type: array
            items:
              $ref: "#/definitions/Whitelist"

    post:
      tags:
      - Whitelist
      description: Add a domain to the whitelist
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: New whitelisted domain
          schema:
            $ref: "#/definitions/Whitelist"
        "404":
          description: Domain already whitelisted
          schema:
            $ref: "#/definitions/Error"

    delete:
      tags:
      - Whitelist
      description: Remove domain from the whitelist
      parameters:
      - in: formData
        name: domain
        required: true
        type: string
      consumes:
      - application/json
      - multipart/form-data
      - application/x-www-form-urlencoded
      produces:
      - application/json
      responses:
        "200":
          description: Domain removed from the whitelist
          schema:
            $ref: "#/definitions/Message"
        "404":
          description: Domain was not in the whitelist
          schema:
            $ref: "#/definitions/Error"

definitions:
  Message:
    type: object
    properties:
      message:
        description: Human-readable message text
        type: string

  Error:
    type: object
    properties:
      error:
        description: Human-readable message text
        type: string

  Application:
    type: object
    properties:
      client_id:
        description: Identifier for the application
        type: string
      client_secret:
        description: Secret string for the application
        type: string
      name:
        description: Human-readable name of the application
        type: string
      website:
        description: Website for the application
        type: string
        format: url
      redirect_uri:
        description: URL to redirect to when authorizing an app
        type: string
      token:
        description: String to use in the Authorization header for client requests
        type: string
      created:
        description: Date the application was created
        type: string
        format: date-time
      accessed:
        description: Date the application was last used
        type: string
        format: date-time

  Config:
    type: object
    properties:
      approval-required:
        description: Require instances to be approved when following
        type: bool
      log-level:
        description: Maximum level of log messages to print to the console
        type: string
      name:
        description: Name of the relay
        type: string
      note:
        description: Blurb to display on the home page
        type: string
      theme:
        description: Name of the color scheme to use for the frontend
        type: string
      whitelist-enabled:
        description: Only allow specific instances to join the relay when enabled
        type: boolean

  DomainBan:
    type: object
    properties:
      domain:
        description: Banned domain
        type: string
      reason:
        description: Public reason for the domain ban
        type: string
      note:
        description: Private note for the software ban
        type: string
      created:
        description: Date the ban was added
        type: string
        format: date-time

  Info:
    type: object
    properties:
      domain:
        description: Domain the relay is hosted on
        type: string
      name:
        description: Name of the relay
        type: string
      description:
        description: Short blurb that describes the relay
        type: string
      version:
        description: Version of the relay
        type: string
      whitelist_enabled:
        description: Only allow specific instances to join the relay when enabled
        type: boolean
      email:
        description: E-Mail address used to contact the admin
        type: string
      admin:
        description: Fediverse account of the admin
        type: string
      icon:
        description: Image for the relay instance
        type: string
      instances:
        description: List of currently subscribed Fediverse instances
        type: array
        items:
          type: string

  Instance:
    type: object
    properties:
      domain:
        description: Domain the instance is hosted on
        type: string
      actor:
        description: ActivityPub actor of the instance that joined
        type: string
        format: url
      inbox:
        description: Inbox (usually shared) of the instance to post to
        type: string
        format: url
      followid:
        description: Url to the Follow activity of the instance
        type: string
        format: url
      software:
        description: Nodeinfo-formatted name of the instance's software
        type: string
      accepted:
        description: Whether or not the follow request has been accepted
        type: boolean
      created:
        description: Date the instance joined or was added
        type: string
        format: date-time

  SoftwareBan:
    type: object
    properties:
      name:
        type: string
        description: Nodeinfo-formatted software name
      reason:
        description: Public reason for the software ban
        type: string
      note:
        description: Private note for the software ban
        type: string
      created:
        description: Date the ban was added
        type: string
        format: date-time

  User:
    type: object
    properties:
      username:
        description: Username of the account
        type: string
      handle:
        description: Fediverse handle associated with the account
        type: string
        format: email
      created:
        description: Date the account was created
        type: string
        format: date-time

  Whitelist:
    type: object
    properties:
      domain:
        type: string
        description: Whitelisted domain
      created:
        description: Date the domain was added to the whitelist
        type: string
        format: date-time
