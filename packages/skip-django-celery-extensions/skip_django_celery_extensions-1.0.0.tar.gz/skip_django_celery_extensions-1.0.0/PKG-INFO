Metadata-Version: 2.1
Name: skip-django-celery-extensions
Version: 1.0.0
Summary: Django celery extensions library.
Home-page: https://github.com/skip-pay/django-celery-extensions
Author: Lubos Matl
Author-email: matllubos@gmail.com
License: MIT
Keywords: django,celery
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Web Environment
Classifier: Framework :: Django
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: End Users/Desktop
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: Czech
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Topic :: Internet :: WWW/HTTP :: Dynamic Content
Classifier: Topic :: Internet :: WWW/HTTP :: Site Management
Description-Content-Type: text/markdown
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: django>=4.2.0
Requires-Dist: import_string>=0.1.0
Requires-Dist: celery<5.4,>=5.2

========================
Django Celery Extensions
========================


.. image:: https://img.shields.io/pypi/v/django-celery-extensions.svg
        :target: https://pypi.python.org/pypi/django-celery-extensions

.. image:: https://img.shields.io/travis/druids/django-celery-extensions.svg
        :target: https://travis-ci.org/druids/django-celery-extensions

.. image:: https://readthedocs.org/projects/django-celery-extensions/badge/?version=latest
        :target: https://django-celery-extensions.readthedocs.io/en/latest/?badge=latest
        :alt: Documentation Status

.. image:: https://coveralls.io/repos/github/druids/django-celery-extensions/badge.svg?branch=master
        :target: https://coveralls.io/github/druids/django-celery-extensions?branch=master
        :alt: Code coverage

General purpose celery extensions library for Django.


* Free software: MIT license
* Documentation: https://django-celery-extensions.readthedocs.io.
* Supported Python versions: 3.6, 3.7, 3.8
* Supported Django versions: 2.2


Features
--------

* Easy integration into project
* Run celery via Django
* Unique running instance of celery beater
* Unique task run
