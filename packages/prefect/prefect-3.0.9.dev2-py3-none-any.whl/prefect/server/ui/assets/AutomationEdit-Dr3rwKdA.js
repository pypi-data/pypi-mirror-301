import{d as A,h as y,W as b,J as h,i as w,c as C,j as a,k as g,u as k,o as v,l as u,m as e,E as B,G as r,B as E,K as W,L as d,Y as j}from"./index-DGGjalVM.js";import{_ as I}from"./AutomationWizard.vue_vue_type_script_setup_true_lang-CbJXG2LL.js";import{u as K}from"./usePageTitle-JaUVXf-x.js";import{u as N}from"./usePrefectApi-ClSUvxqw.js";const $=A({__name:"AutomationEdit",async setup(P){let o,m;const i=N(),c=y(),_=k(),p=b("automationId"),s=([o,m]=h(()=>i.automations.getAutomation(p.value)),o=await o,m(),o);K(`Edit Automation: ${s.name}`);const f=w(()=>[{text:"Automations",to:c.automations()},{text:s.name}]);async function x(l){try{await i.automations.updateAutomation(p.value,l),d(r.success.automationUpdate),_.push(c.automations())}catch(t){console.error(t);const n=j(t,r.error.automationUpdate);d(n,"error",{timeout:!1})}}return(l,t)=>{const n=g("p-layout-default");return v(),C(n,{class:"workspace-automation-create"},{header:a(()=>[u(e(W),{crumbs:f.value},{actions:a(()=>[u(e(B),{to:e(r).docs.automations},{default:a(()=>t[0]||(t[0]=[E(" Documentation ")])),_:1},8,["to"])]),_:1},8,["crumbs"])]),default:a(()=>[u(I,{automation:e(s),editing:"",onSubmit:x},null,8,["automation"])]),_:1})}}});export{$ as default};
//# sourceMappingURL=AutomationEdit-Dr3rwKdA.js.map
