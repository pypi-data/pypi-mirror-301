# This file is automatically generated. Do not modify it manually!
from functools import lru_cache
import numpy as np

from .config import cond
from .OneLoop import B0fin, B0del
from .T134 import T134fin


@lru_cache(maxsize=150)
def T1134(m1: float, m2: float, m3: float, m4) -> float:
	""" Computes the UV-finite part of the T1134 integral.

	Args:
		m1: internal mass
		m2: internal mass
		m3: internal mass
		m4: internal mass

	Returns:
		finite part of the T1134 integral.
	"""

	try:

		m1, m2 = np.sort([m1, m2])
		
		

		m1sq = m1**2
		m2sq = m2**2
		m3sq = m3**2
		m4sq = m4**2

		def eval_1():
			return -3 - B0del(0,0,m3sq) + 3*B0fin(0,0,m3sq) - B0fin(0,0,m3sq)**2/2.
		def eval_2():
			return B0del(0,0,m1sq) + ((-2 + B0fin(0,0,m1sq))*B0fin(0,0,m1sq))/2.
		def eval_3():
			return (-2*m1 - m4 + (2*m1sq - m4sq)*B0del(0,0,m1sq) - m4sq*B0del(0,0,m4sq) - 4*m1*B0fin(0,0,m1) - 2*m1sq*B0fin(0,0,m1sq) + m4sq*B0fin(0,0,m1sq) + m1sq*B0fin(0,0,m1sq)**2 - 2*m4*B0fin(0,0,m4) + m4sq*B0fin(0,0,m4sq) - m4sq*B0fin(0,0,m1sq)*B0fin(0,0,m4sq) + T134fin(m4,m1,m1))/(4*m1sq - m4sq)
		def eval_4():
			return (-2*m1 - m3 + (2*m1sq - m3sq)*B0del(0,0,m1sq) - m3sq*B0del(0,0,m3sq) - 4*m1*B0fin(0,0,m1) - 2*m1sq*B0fin(0,0,m1sq) + m3sq*B0fin(0,0,m1sq) + m1sq*B0fin(0,0,m1sq)**2 - 2*m3*B0fin(0,0,m3) + m3sq*B0fin(0,0,m3sq) - m3sq*B0fin(0,0,m1sq)*B0fin(0,0,m3sq) + T134fin(m3,m1,m1))/(4*m1sq - m3sq)
		def eval_5():
			return (-m1**3 - m1sq*m3 + m3**3 + m1*m3sq - m1sq*m4 + m3sq*m4 + m4**3 + m1*m4sq + m3*m4sq + ((m3sq - m4sq)**2 - m1sq*(m3sq + m4sq))*B0del(0,0,m1sq) + m3sq*(-m1sq + m3sq + m4sq)*B0del(0,0,m3sq) + m4**4*B0del(0,0,m4sq) - m1sq*m4sq*B0del(0,0,m4sq) + m3sq*m4sq*B0del(0,0,m4sq) - 2*m1**3*B0fin(0,0,m1) + 2*m1*m3sq*B0fin(0,0,m1) + 2*m1*m4sq*B0fin(0,0,m1) - m3**4*B0fin(0,0,m1sq) + m1sq*m3sq*B0fin(0,0,m1sq) - m4**4*B0fin(0,0,m1sq) + m1sq*m4sq*B0fin(0,0,m1sq) + 2*m3sq*m4sq*B0fin(0,0,m1sq) - 2*m1sq*m3*B0fin(0,0,m3) + 2*m3**3*B0fin(0,0,m3) + 2*m3*m4sq*B0fin(0,0,m3) - m3**4*B0fin(0,0,m3sq) + m1sq*m3sq*B0fin(0,0,m3sq) - m3sq*m4sq*B0fin(0,0,m3sq) + m3**4*B0fin(0,0,m1sq)*B0fin(0,0,m3sq) - m1sq*m3sq*B0fin(0,0,m1sq)*B0fin(0,0,m3sq) - m3sq*m4sq*B0fin(0,0,m1sq)*B0fin(0,0,m3sq) - 2*m1sq*m4*B0fin(0,0,m4) + 2*m3sq*m4*B0fin(0,0,m4) + 2*m4**3*B0fin(0,0,m4) - m4**4*B0fin(0,0,m4sq) + m1sq*m4sq*B0fin(0,0,m4sq) - m3sq*m4sq*B0fin(0,0,m4sq) + m4**4*B0fin(0,0,m1sq)*B0fin(0,0,m4sq) - m1sq*m4sq*B0fin(0,0,m1sq)*B0fin(0,0,m4sq) - m3sq*m4sq*B0fin(0,0,m1sq)*B0fin(0,0,m4sq) + 2*m3sq*m4sq*B0fin(0,0,m3sq)*B0fin(0,0,m4sq) + m1sq*T134fin(m4,m3,m1) - m3sq*T134fin(m4,m3,m1) - m4sq*T134fin(m4,m3,m1))/(m1**4 + (m3sq - m4sq)**2 - 2*m1sq*(m3sq + m4sq))
		def eval_6():
			return (T134fin(m4,m3,m1) - T134fin(m4,m3,m2))/(m1sq - m2sq)

		cond_m1_0 = cond(m1, 0)
		cond_m2_0 = cond(m2, 0)
		cond_m3_0 = cond(m3, 0)
		cond_m4_0 = cond(m4, 0)
		cond_m4_m3 = cond(m4, m3)
		cond_m4_m2 = cond(m4, m2)
		cond_m3_m2 = cond(m3, m2)
		cond_m4_m1 = cond(m4, m1)
		cond_m3_m1 = cond(m3, m1)
		cond_m2_m1 = cond(m2, m1)

		conditions = [
			(cond_m1_0 and cond_m2_0 and cond_m3_0 and cond_m4_0, lambda: eval_2()),
			(cond_m1_0 and cond_m2_0 and cond_m3_0, lambda: eval_5()),
			(cond_m1_0 and cond_m2_0 and cond_m4_0, lambda: eval_5()),
			(cond_m1_0 and cond_m3_0 and cond_m4_0, lambda: eval_6()),
			(cond_m2_0 and cond_m3_0 and cond_m4_0, lambda: eval_6()),
			(cond_m1_0 and cond_m2_0 and cond_m4_m3, lambda: eval_1()),
			(cond_m1_0 and cond_m3_0 and cond_m4_m2, lambda: eval_6()),
			(cond_m1_0 and cond_m3_m2 and cond_m4_0, lambda: eval_6()),
			(cond_m2_0 and cond_m3_0 and cond_m4_m1, lambda: eval_6()),
			(cond_m2_0 and cond_m3_m1 and cond_m4_0, lambda: eval_6()),
			(cond_m2_m1 and cond_m3_0 and cond_m4_0, lambda: eval_5()),
			(cond_m1_0 and cond_m2_0, lambda: eval_5()),
			(cond_m1_0 and cond_m3_0, lambda: eval_6()),
			(cond_m1_0 and cond_m4_0, lambda: eval_6()),
			(cond_m2_0 and cond_m3_0, lambda: eval_6()),
			(cond_m2_0 and cond_m4_0, lambda: eval_6()),
			(cond_m3_0 and cond_m4_0, lambda: eval_6()),
			(cond_m1_0 and cond_m3_m2 and cond_m4_m2, lambda: eval_6()),
			(cond_m2_0 and cond_m3_m1 and cond_m4_m1, lambda: eval_6()),
			(cond_m2_m1 and cond_m3_0 and cond_m4_m1, lambda: eval_4()),
			(cond_m2_m1 and cond_m3_m1 and cond_m4_0, lambda: eval_3()),
			(cond_m1_0 and cond_m4_m3, lambda: eval_6()),
			(cond_m1_0 and cond_m3_m2, lambda: eval_6()),
			(cond_m1_0 and cond_m4_m2, lambda: eval_6()),
			(cond_m2_0 and cond_m4_m3, lambda: eval_6()),
			(cond_m3_0 and cond_m4_m2, lambda: eval_6()),
			(cond_m3_m2 and cond_m4_0, lambda: eval_6()),
			(cond_m2_0 and cond_m3_m1, lambda: eval_6()),
			(cond_m2_0 and cond_m4_m1, lambda: eval_6()),
			(cond_m2_m1 and cond_m3_0, lambda: eval_5()),
			(cond_m2_m1 and cond_m4_0, lambda: eval_5()),
			(cond_m3_0 and cond_m4_m1, lambda: eval_6()),
			(cond_m3_m1 and cond_m4_0, lambda: eval_6()),
			(cond_m1_0, lambda: eval_6()),
			(cond_m2_0, lambda: eval_6()),
			(cond_m3_0, lambda: eval_6()),
			(cond_m4_0, lambda: eval_6()),
			(cond_m2_m1 and cond_m3_m1 and cond_m4_m1, lambda: eval_5()),
			(cond_m3_m2 and cond_m4_m2, lambda: eval_6()),
			(cond_m2_m1 and cond_m4_m3, lambda: eval_5()),
			(cond_m3_m1 and cond_m4_m2, lambda: eval_6()),
			(cond_m3_m2 and cond_m4_m1, lambda: eval_6()),
			(cond_m2_m1 and cond_m3_m1, lambda: eval_5()),
			(cond_m2_m1 and cond_m4_m1, lambda: eval_5()),
			(cond_m3_m1 and cond_m4_m1, lambda: eval_6()),
			(cond_m4_m3, lambda: eval_6()),
			(cond_m3_m2, lambda: eval_6()),
			(cond_m4_m2, lambda: eval_6()),
			(cond_m2_m1, lambda: eval_5()),
			(cond_m3_m1, lambda: eval_6()),
			(cond_m4_m1, lambda: eval_6()),
			(True, lambda: eval_6())
		]

		for condition,action in conditions:
			if condition:
				return action()

	except Exception as e:
		raise Exception(f"There was an error when evaluating the T1134 integral with masses {m1}, {m2}, {m3}, {m4} from {e}")