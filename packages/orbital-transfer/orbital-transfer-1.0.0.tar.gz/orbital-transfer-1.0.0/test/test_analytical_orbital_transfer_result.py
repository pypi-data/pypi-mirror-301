# coding: utf-8

"""
    Orbital transfer API

    Orbital transfer API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from orbital_transfer.models.analytical_orbital_transfer_result import AnalyticalOrbitalTransferResult

class TestAnalyticalOrbitalTransferResult(unittest.TestCase):
    """AnalyticalOrbitalTransferResult unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AnalyticalOrbitalTransferResult:
        """Test AnalyticalOrbitalTransferResult
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AnalyticalOrbitalTransferResult`
        """
        model = AnalyticalOrbitalTransferResult()
        if include_optional:
            return AnalyticalOrbitalTransferResult(
                delta_v = 1.337,
                delta_inclination = 1.337,
                delta_semi_major_axis = 1.337,
                delta_eccentricity = 1.337,
                maneuvering_duration = 1.337,
                mission_duration = 1.337,
                thrust_duration = 1.337,
                thruster_mean_duty_cycle = 1.337,
                total_impulse = 1.337,
                used_propellant = 1.337,
                number_of_burns = 56,
                mean_burn_duration_estimation = 1.337,
                drag_perturbation_enabled = True,
                mean_atmospheric_density = 1.337,
                mean_drag = 1.337,
                mean_drag_acceleration = 1.337,
                drag_to_thrust_ratio = 1.337,
                drag_delta_v = 1.337,
                maneuver_model = '',
                errors = [
                    ''
                    ],
                warnings = [
                    ''
                    ],
                computation_date = ''
            )
        else:
            return AnalyticalOrbitalTransferResult(
        )
        """

    def testAnalyticalOrbitalTransferResult(self):
        """Test AnalyticalOrbitalTransferResult"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
