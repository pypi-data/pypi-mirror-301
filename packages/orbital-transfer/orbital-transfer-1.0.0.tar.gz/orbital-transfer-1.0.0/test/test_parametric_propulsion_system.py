# coding: utf-8

"""
    Orbital transfer API

    Orbital transfer API

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from orbital_transfer.models.parametric_propulsion_system import ParametricPropulsionSystem

class TestParametricPropulsionSystem(unittest.TestCase):
    """ParametricPropulsionSystem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ParametricPropulsionSystem:
        """Test ParametricPropulsionSystem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ParametricPropulsionSystem`
        """
        model = ParametricPropulsionSystem()
        if include_optional:
            return ParametricPropulsionSystem(
                total_impulse = 1.337,
                position_in_spacecraft_frame_x = 1.337,
                position_in_spacecraft_frame_y = 1.337,
                position_in_spacecraft_frame_z = 1.337,
                direction_in_spacecraft_frame_x = 1.337,
                direction_in_spacecraft_frame_y = 1.337,
                direction_in_spacecraft_frame_z = 1.337,
                thrust = 1.337,
                isp = 1.337,
                power = 1.337,
                propellant_mass = 1.337,
                total_mass = 1.337,
                standby_power = 1.337,
                warm_up_power = 1.337,
                warm_up_duration = 1.337,
                propellant_capacity_choice = 'PROPELLANT'
            )
        else:
            return ParametricPropulsionSystem(
        )
        """

    def testParametricPropulsionSystem(self):
        """Test ParametricPropulsionSystem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
